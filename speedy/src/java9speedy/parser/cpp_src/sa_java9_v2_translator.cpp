/*
 * This file was auto-generated by speedy-antlr-tool v1.1.0
 *  https://github.com/amykyta3/speedy-antlr-tool
 */

#include "sa_java9_v2_translator.h"


SA_Java9_v2Translator::SA_Java9_v2Translator(speedy_antlr::Translator *translator) {
    this->translator = translator;
}

SA_Java9_v2Translator::~SA_Java9_v2Translator() {
    Py_XDECREF(LiteralContext_cls);
    Py_XDECREF(PrimitiveType1Context_cls);
    Py_XDECREF(PrimitiveType2Context_cls);
    Py_XDECREF(NumericType1Context_cls);
    Py_XDECREF(NumericType2Context_cls);
    Py_XDECREF(IntegralTypeContext_cls);
    Py_XDECREF(FloatingPointTypeContext_cls);
    Py_XDECREF(ReferenceType3Context_cls);
    Py_XDECREF(ReferenceType2Context_cls);
    Py_XDECREF(ReferenceType1Context_cls);
    Py_XDECREF(ClassOrInterfaceTypeContext_cls);
    Py_XDECREF(ClassType1Context_cls);
    Py_XDECREF(ClassType2Context_cls);
    Py_XDECREF(ClassType_lf_classOrInterfaceTypeContext_cls);
    Py_XDECREF(ClassType_lfno_classOrInterfaceTypeContext_cls);
    Py_XDECREF(InterfaceTypeContext_cls);
    Py_XDECREF(InterfaceType_lf_classOrInterfaceTypeContext_cls);
    Py_XDECREF(InterfaceType_lfno_classOrInterfaceTypeContext_cls);
    Py_XDECREF(TypeVariableContext_cls);
    Py_XDECREF(ArrayTyp3Context_cls);
    Py_XDECREF(ArrayType1Context_cls);
    Py_XDECREF(ArrayType2Context_cls);
    Py_XDECREF(DimsContext_cls);
    Py_XDECREF(TypeParameterContext_cls);
    Py_XDECREF(TypeParameterModifierContext_cls);
    Py_XDECREF(TypeBound2Context_cls);
    Py_XDECREF(TypeBound1Context_cls);
    Py_XDECREF(AdditionalBoundContext_cls);
    Py_XDECREF(TypeArgumentsContext_cls);
    Py_XDECREF(TypeArgumentListContext_cls);
    Py_XDECREF(TypeArgument1Context_cls);
    Py_XDECREF(TypeArgument2Context_cls);
    Py_XDECREF(WildcardContext_cls);
    Py_XDECREF(WildcardBound2Context_cls);
    Py_XDECREF(WildcardBounds1Context_cls);
    Py_XDECREF(ModuleName1Context_cls);
    Py_XDECREF(ModuleName2Context_cls);
    Py_XDECREF(PackageName2Context_cls);
    Py_XDECREF(PackageName1Context_cls);
    Py_XDECREF(TypeName1Context_cls);
    Py_XDECREF(TypeName2Context_cls);
    Py_XDECREF(PackageOrTypeName1Context_cls);
    Py_XDECREF(PackageOrTypeName2Context_cls);
    Py_XDECREF(ExpressionName2Context_cls);
    Py_XDECREF(ExpressionName1Context_cls);
    Py_XDECREF(MethodNameContext_cls);
    Py_XDECREF(AmbiguousName1Context_cls);
    Py_XDECREF(AmbiguousName2Context_cls);
    Py_XDECREF(CompilationUnit2Context_cls);
    Py_XDECREF(CompilationUnit1Context_cls);
    Py_XDECREF(OrdinaryCompilationContext_cls);
    Py_XDECREF(ModularCompilationContext_cls);
    Py_XDECREF(PackageDeclarationContext_cls);
    Py_XDECREF(PackageModifierContext_cls);
    Py_XDECREF(ImportDeclaration3Context_cls);
    Py_XDECREF(ImportDeclaration4Context_cls);
    Py_XDECREF(ImportDeclaration1Context_cls);
    Py_XDECREF(ImportDeclaration2Context_cls);
    Py_XDECREF(SingleTypeImportDeclarationContext_cls);
    Py_XDECREF(TypeImportOnDemandDeclarationContext_cls);
    Py_XDECREF(SingleStaticImportDeclarationContext_cls);
    Py_XDECREF(StaticImportOnDemandDeclarationContext_cls);
    Py_XDECREF(TypeDeclaration2Context_cls);
    Py_XDECREF(TypeDeclaration3Context_cls);
    Py_XDECREF(TypeDeclaration1Context_cls);
    Py_XDECREF(ModuleDeclarationContext_cls);
    Py_XDECREF(ModuleDirective5Context_cls);
    Py_XDECREF(ModuleDirective4Context_cls);
    Py_XDECREF(ModuleDirective1Context_cls);
    Py_XDECREF(ModuleDirective2Context_cls);
    Py_XDECREF(ModuleDirectiv3Context_cls);
    Py_XDECREF(RequiresModifierContext_cls);
    Py_XDECREF(ClassDeclaration1Context_cls);
    Py_XDECREF(ClassDeclaration2Context_cls);
    Py_XDECREF(NormalClassDeclarationContext_cls);
    Py_XDECREF(ClassModifierContext_cls);
    Py_XDECREF(TypeParametersContext_cls);
    Py_XDECREF(TypeParameterListContext_cls);
    Py_XDECREF(SuperclassContext_cls);
    Py_XDECREF(SuperinterfacesContext_cls);
    Py_XDECREF(InterfaceTypeListContext_cls);
    Py_XDECREF(ClassBodyContext_cls);
    Py_XDECREF(ClassBodyDeclaration4Context_cls);
    Py_XDECREF(ClassBodyDeclaration1Context_cls);
    Py_XDECREF(ClassBodyDeclaration3Context_cls);
    Py_XDECREF(ClassBodyDeclaration2Context_cls);
    Py_XDECREF(ClassMemberDeclaration4Context_cls);
    Py_XDECREF(ClassMemberDeclaration5Context_cls);
    Py_XDECREF(ClassMemberDeclaration2Context_cls);
    Py_XDECREF(ClassMemberDeclaration3Context_cls);
    Py_XDECREF(ClassMemberDeclaration1Context_cls);
    Py_XDECREF(FieldDeclarationContext_cls);
    Py_XDECREF(FieldModifierContext_cls);
    Py_XDECREF(VariableDeclaratorListContext_cls);
    Py_XDECREF(VariableDeclaratorContext_cls);
    Py_XDECREF(VariableDeclaratorIdContext_cls);
    Py_XDECREF(VariableInitializer1Context_cls);
    Py_XDECREF(VariableInitializer2Context_cls);
    Py_XDECREF(UnannType2Context_cls);
    Py_XDECREF(UnannType1Context_cls);
    Py_XDECREF(UnannPrimitiveType2Context_cls);
    Py_XDECREF(UnannPrimitiveType1Context_cls);
    Py_XDECREF(UnannReferenceType3Context_cls);
    Py_XDECREF(UnannReferenceType1Context_cls);
    Py_XDECREF(UnannReferenceType2Context_cls);
    Py_XDECREF(UnannClassOrInterfaceTypeContext_cls);
    Py_XDECREF(UnannClassType2Context_cls);
    Py_XDECREF(UnannClassType1Context_cls);
    Py_XDECREF(UnannClassType_lf_unannClassOrInterfaceTypeContext_cls);
    Py_XDECREF(UnannClassType_lfno_unannClassOrInterfaceTypeContext_cls);
    Py_XDECREF(UnannInterfaceTypeContext_cls);
    Py_XDECREF(UnannInterfaceType_lf_unannClassOrInterfaceTypeContext_cls);
    Py_XDECREF(UnannInterfaceType_lfno_unannClassOrInterfaceTypeContext_cls);
    Py_XDECREF(UnannTypeVariableContext_cls);
    Py_XDECREF(UnannArrayType2Context_cls);
    Py_XDECREF(UnannArrayType1Context_cls);
    Py_XDECREF(UnannArrayTyp3Context_cls);
    Py_XDECREF(MethodDeclarationContext_cls);
    Py_XDECREF(MethodModifierContext_cls);
    Py_XDECREF(MethodHeaderContext_cls);
    Py_XDECREF(ResultContext_cls);
    Py_XDECREF(MethodDeclaratorContext_cls);
    Py_XDECREF(FormalParameterList3Context_cls);
    Py_XDECREF(FormalParameterList2Context_cls);
    Py_XDECREF(FormalParameterList1Context_cls);
    Py_XDECREF(FormalParameters2Context_cls);
    Py_XDECREF(FormalParameters1Context_cls);
    Py_XDECREF(FormalParameterContext_cls);
    Py_XDECREF(VariableModifierContext_cls);
    Py_XDECREF(LastFormalParameter2Context_cls);
    Py_XDECREF(LastFormalParameter1Context_cls);
    Py_XDECREF(ReceiverParameterContext_cls);
    Py_XDECREF(Throws_Context_cls);
    Py_XDECREF(ExceptionTypeListContext_cls);
    Py_XDECREF(ExceptionType2Context_cls);
    Py_XDECREF(ExceptionType1Context_cls);
    Py_XDECREF(MethodBodyContext_cls);
    Py_XDECREF(InstanceInitializerContext_cls);
    Py_XDECREF(StaticInitializerContext_cls);
    Py_XDECREF(ConstructorDeclarationContext_cls);
    Py_XDECREF(ConstructorModifierContext_cls);
    Py_XDECREF(ConstructorDeclaratorContext_cls);
    Py_XDECREF(SimpleTypeNameContext_cls);
    Py_XDECREF(ConstructorBodyContext_cls);
    Py_XDECREF(ExplicitConstructorInvocation1Context_cls);
    Py_XDECREF(ExplicitConstructorInvocation4Context_cls);
    Py_XDECREF(ExplicitConstructorInvocation2Context_cls);
    Py_XDECREF(ExplicitConstructorInvocation3Context_cls);
    Py_XDECREF(EnumDeclarationContext_cls);
    Py_XDECREF(EnumBodyContext_cls);
    Py_XDECREF(EnumConstantListContext_cls);
    Py_XDECREF(EnumConstantContext_cls);
    Py_XDECREF(EnumConstantModifierContext_cls);
    Py_XDECREF(EnumBodyDeclarationsContext_cls);
    Py_XDECREF(InterfaceDeclaration1Context_cls);
    Py_XDECREF(InterfaceDeclaration2Context_cls);
    Py_XDECREF(NormalInterfaceDeclarationContext_cls);
    Py_XDECREF(InterfaceModifierContext_cls);
    Py_XDECREF(ExtendsInterfacesContext_cls);
    Py_XDECREF(InterfaceBodyContext_cls);
    Py_XDECREF(InterfaceMemberDeclaration5Context_cls);
    Py_XDECREF(InterfaceMemberDeclaration4Context_cls);
    Py_XDECREF(InterfaceMemberDeclaration3Context_cls);
    Py_XDECREF(InterfaceMemberDeclaration2Context_cls);
    Py_XDECREF(InterfaceMemberDeclaration1Context_cls);
    Py_XDECREF(ConstantDeclarationContext_cls);
    Py_XDECREF(ConstantModifierContext_cls);
    Py_XDECREF(InterfaceMethodDeclarationContext_cls);
    Py_XDECREF(InterfaceMethodModifierContext_cls);
    Py_XDECREF(AnnotationTypeDeclarationContext_cls);
    Py_XDECREF(AnnotationTypeBodyContext_cls);
    Py_XDECREF(AnnotationTypeMemberDeclaration1Context_cls);
    Py_XDECREF(AnnotationTypeMemberDeclaration2Context_cls);
    Py_XDECREF(AnnotationTypeMemberDeclaration3Context_cls);
    Py_XDECREF(AnnotationTypeMemberDeclaration4Context_cls);
    Py_XDECREF(AnnotationTypeMemberDeclaration5Context_cls);
    Py_XDECREF(AnnotationTypeElementDeclarationContext_cls);
    Py_XDECREF(AnnotationTypeElementModifierContext_cls);
    Py_XDECREF(DefaultValueContext_cls);
    Py_XDECREF(Annotation3Context_cls);
    Py_XDECREF(Annotation2Context_cls);
    Py_XDECREF(Annotation1Context_cls);
    Py_XDECREF(NormalAnnotationContext_cls);
    Py_XDECREF(ElementValuePairListContext_cls);
    Py_XDECREF(ElementValuePairContext_cls);
    Py_XDECREF(ElementValue2Context_cls);
    Py_XDECREF(ElementValue1Context_cls);
    Py_XDECREF(ElementValu3Context_cls);
    Py_XDECREF(ElementValueArrayInitializerContext_cls);
    Py_XDECREF(ElementValueListContext_cls);
    Py_XDECREF(MarkerAnnotationContext_cls);
    Py_XDECREF(SingleElementAnnotationContext_cls);
    Py_XDECREF(ArrayInitializerContext_cls);
    Py_XDECREF(VariableInitializerListContext_cls);
    Py_XDECREF(BlockContext_cls);
    Py_XDECREF(BlockStatementsContext_cls);
    Py_XDECREF(BlockStatement1Context_cls);
    Py_XDECREF(BlockStatement3Context_cls);
    Py_XDECREF(BlockStatement2Context_cls);
    Py_XDECREF(LocalVariableDeclarationStatementContext_cls);
    Py_XDECREF(LocalVariableDeclarationContext_cls);
    Py_XDECREF(Statement5Context_cls);
    Py_XDECREF(Statement6Context_cls);
    Py_XDECREF(Statement3Context_cls);
    Py_XDECREF(Statement4Context_cls);
    Py_XDECREF(Statement1Context_cls);
    Py_XDECREF(Statement2Context_cls);
    Py_XDECREF(StatementNoShortIf5Context_cls);
    Py_XDECREF(StatementNoShortIf2Context_cls);
    Py_XDECREF(StatementNoShortIf1Context_cls);
    Py_XDECREF(StatementNoShortIf4Context_cls);
    Py_XDECREF(StatementNoShortIf3Context_cls);
    Py_XDECREF(StatementWithoutTrailingSubstatement8Context_cls);
    Py_XDECREF(StatementWithoutTrailingSubstatement9Context_cls);
    Py_XDECREF(StatementWithoutTrailingSubstatement4Context_cls);
    Py_XDECREF(StatementWithoutTrailingSubstatement5Context_cls);
    Py_XDECREF(StatementWithoutTrailingSubstatement6Context_cls);
    Py_XDECREF(StatementWithoutTrailingSubstatement7Context_cls);
    Py_XDECREF(StatementWithoutTrailingSubstatement1Context_cls);
    Py_XDECREF(StatementWithoutTrailingSubstatement10Context_cls);
    Py_XDECREF(StatementWithoutTrailingSubstatement2Context_cls);
    Py_XDECREF(StatementWithoutTrailingSubstatement3Context_cls);
    Py_XDECREF(StatementWithoutTrailingSubstatement11Context_cls);
    Py_XDECREF(StatementWithoutTrailingSubstatement12Context_cls);
    Py_XDECREF(EmptyStatementContext_cls);
    Py_XDECREF(LabeledStatementContext_cls);
    Py_XDECREF(LabeledStatementNoShortIfContext_cls);
    Py_XDECREF(ExpressionStatementContext_cls);
    Py_XDECREF(StatementExpression3Context_cls);
    Py_XDECREF(StatementExpression4Context_cls);
    Py_XDECREF(StatementExpression5Context_cls);
    Py_XDECREF(StatementExpression6Context_cls);
    Py_XDECREF(StatementExpression1Context_cls);
    Py_XDECREF(StatementExpression2Context_cls);
    Py_XDECREF(StatementExpression7Context_cls);
    Py_XDECREF(IfThenStatementContext_cls);
    Py_XDECREF(IfThenElseStatementContext_cls);
    Py_XDECREF(IfThenElseStatementNoShortIfContext_cls);
    Py_XDECREF(AssertStatement2Context_cls);
    Py_XDECREF(AssertStatement1Context_cls);
    Py_XDECREF(SwitchStatementContext_cls);
    Py_XDECREF(SwitchBlockContext_cls);
    Py_XDECREF(SwitchBlockStatementGroupContext_cls);
    Py_XDECREF(SwitchLabelsContext_cls);
    Py_XDECREF(SwitchLabel3Context_cls);
    Py_XDECREF(SwitchLabel2Context_cls);
    Py_XDECREF(SwitchLabel1Context_cls);
    Py_XDECREF(EnumConstantNameContext_cls);
    Py_XDECREF(WhileStatementContext_cls);
    Py_XDECREF(WhileStatementNoShortIfContext_cls);
    Py_XDECREF(DoStatementContext_cls);
    Py_XDECREF(ForStatement1Context_cls);
    Py_XDECREF(ForStatement2Context_cls);
    Py_XDECREF(ForStatementNoShortIf3Context_cls);
    Py_XDECREF(ForStatementNoShortIf4Context_cls);
    Py_XDECREF(BasicForStatementContext_cls);
    Py_XDECREF(BasicForStatementNoShortIfContext_cls);
    Py_XDECREF(ForInit1Context_cls);
    Py_XDECREF(ForInit2Context_cls);
    Py_XDECREF(ForUpdateContext_cls);
    Py_XDECREF(StatementExpressionListContext_cls);
    Py_XDECREF(EnhancedForStatementContext_cls);
    Py_XDECREF(EnhancedForStatementNoShortIfContext_cls);
    Py_XDECREF(BreakStatementContext_cls);
    Py_XDECREF(ContinueStatementContext_cls);
    Py_XDECREF(ReturnStatementContext_cls);
    Py_XDECREF(ThrowStatementContext_cls);
    Py_XDECREF(SynchronizedStatementContext_cls);
    Py_XDECREF(TryStatement2Context_cls);
    Py_XDECREF(TryStatement3Context_cls);
    Py_XDECREF(TryStatement1Context_cls);
    Py_XDECREF(CatchesContext_cls);
    Py_XDECREF(CatchClauseContext_cls);
    Py_XDECREF(CatchFormalParameterContext_cls);
    Py_XDECREF(CatchTypeContext_cls);
    Py_XDECREF(Finally_Context_cls);
    Py_XDECREF(TryWithResourcesStatementContext_cls);
    Py_XDECREF(ResourceSpecificationContext_cls);
    Py_XDECREF(ResourceListContext_cls);
    Py_XDECREF(Resource2Context_cls);
    Py_XDECREF(Resource1Context_cls);
    Py_XDECREF(VariableAccess1Context_cls);
    Py_XDECREF(VariableAccess2Context_cls);
    Py_XDECREF(PrimaryContext_cls);
    Py_XDECREF(PrimaryNoNewArray1Context_cls);
    Py_XDECREF(PrimaryNoNewArray2Context_cls);
    Py_XDECREF(PrimaryNoNewArray3Context_cls);
    Py_XDECREF(PrimaryNoNewArray8Context_cls);
    Py_XDECREF(PrimaryNoNewArray9Context_cls);
    Py_XDECREF(PrimaryNoNewArray4Context_cls);
    Py_XDECREF(PrimaryNoNewArray5Context_cls);
    Py_XDECREF(PrimaryNoNewArray6Context_cls);
    Py_XDECREF(PrimaryNoNewArray10Context_cls);
    Py_XDECREF(PrimaryNoNewArray7Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lf_arrayAccessContext_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_arrayAccess6Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_arrayAccess10Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_arrayAccess7Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_arrayAccess4Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_arrayAccess5Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_arrayAccess8Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_arrayAccess9Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_arrayAccess2Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_arrayAccess3Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_arrayAccess1Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lf_primary2Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lf_primary3Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lf_primary1Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lf_primary4Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lf_primary5Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lf_primary_lf_arrayAccess_lf_primaryContext_cls);
    Py_XDECREF(PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary1Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary3Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary2Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary4Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary9Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary5Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary6Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary7Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary8Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary1Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary2Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary12Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary3Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary11Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary4Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary10Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary_lf_arrayAccess_lfno_primaryContext_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary3Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary11Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary2Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary5Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary4Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary10Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary1Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary7Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary6Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary9Context_cls);
    Py_XDECREF(PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary8Context_cls);
    Py_XDECREF(ClassLiteral2Context_cls);
    Py_XDECREF(ClassLiteral1Context_cls);
    Py_XDECREF(ClassInstanceCreationExpression1Context_cls);
    Py_XDECREF(ClassInstanceCreationExpression3Context_cls);
    Py_XDECREF(ClassInstanceCreationExpression2Context_cls);
    Py_XDECREF(ClassInstanceCreationExpression_lf_primaryContext_cls);
    Py_XDECREF(ClassInstanceCreationExpression_lfno_primary1Context_cls);
    Py_XDECREF(ClassInstanceCreationExpression_lfno_primary2Context_cls);
    Py_XDECREF(TypeArgumentsOrDiamond1Context_cls);
    Py_XDECREF(TypeArgumentsOrDiamond2Context_cls);
    Py_XDECREF(FieldAccess1Context_cls);
    Py_XDECREF(FieldAccess2Context_cls);
    Py_XDECREF(FieldAccess3Context_cls);
    Py_XDECREF(FieldAccess_lf_primaryContext_cls);
    Py_XDECREF(FieldAccess_lfno_primary2Context_cls);
    Py_XDECREF(FieldAccess_lfno_primary1Context_cls);
    Py_XDECREF(ArrayAccessContext_cls);
    Py_XDECREF(ArrayAccess_lf_primaryContext_cls);
    Py_XDECREF(ArrayAccess_lfno_primaryContext_cls);
    Py_XDECREF(MethodInvocation1Context_cls);
    Py_XDECREF(MethodInvocation2Context_cls);
    Py_XDECREF(MethodInvocation3Context_cls);
    Py_XDECREF(MethodInvocation4Context_cls);
    Py_XDECREF(MethodInvocation5Context_cls);
    Py_XDECREF(MethodInvocation6Context_cls);
    Py_XDECREF(MethodInvocation_lf_primaryContext_cls);
    Py_XDECREF(MethodInvocation_lfno_primary3Context_cls);
    Py_XDECREF(MethodInvocation_lfno_primary2Context_cls);
    Py_XDECREF(MethodInvocation_lfno_primary1Context_cls);
    Py_XDECREF(MethodInvocation_lfno_primary5Context_cls);
    Py_XDECREF(MethodInvocation_lfno_primary4Context_cls);
    Py_XDECREF(ArgumentListContext_cls);
    Py_XDECREF(MethodReference1Context_cls);
    Py_XDECREF(MethodReference3Context_cls);
    Py_XDECREF(MethodReference2Context_cls);
    Py_XDECREF(MethodReference5Context_cls);
    Py_XDECREF(MethodReference4Context_cls);
    Py_XDECREF(MethodReference7Context_cls);
    Py_XDECREF(MethodReference6Context_cls);
    Py_XDECREF(MethodReference_lf_primaryContext_cls);
    Py_XDECREF(MethodReference_lfno_primary6Context_cls);
    Py_XDECREF(MethodReference_lfno_primary5Context_cls);
    Py_XDECREF(MethodReference_lfno_primary4Context_cls);
    Py_XDECREF(MethodReference_lfno_primary3Context_cls);
    Py_XDECREF(MethodReference_lfno_primary2Context_cls);
    Py_XDECREF(MethodReference_lfno_primary1Context_cls);
    Py_XDECREF(ArrayCreationExpression4Context_cls);
    Py_XDECREF(ArrayCreationExpression2Context_cls);
    Py_XDECREF(ArrayCreationExpression3Context_cls);
    Py_XDECREF(ArrayCreationExpression1Context_cls);
    Py_XDECREF(DimExprsContext_cls);
    Py_XDECREF(DimExprContext_cls);
    Py_XDECREF(ConstantExpressionContext_cls);
    Py_XDECREF(Expression2Context_cls);
    Py_XDECREF(Expression1Context_cls);
    Py_XDECREF(LambdaExpressionContext_cls);
    Py_XDECREF(LambdaParameters3Context_cls);
    Py_XDECREF(LambdaParameters1Context_cls);
    Py_XDECREF(LambdaParameters2Context_cls);
    Py_XDECREF(InferredFormalParameterListContext_cls);
    Py_XDECREF(LambdaBody1Context_cls);
    Py_XDECREF(LambdaBody2Context_cls);
    Py_XDECREF(AssignmentExpression1Context_cls);
    Py_XDECREF(AssignmentExpression2Context_cls);
    Py_XDECREF(AssignmentContext_cls);
    Py_XDECREF(LeftHandSide5Context_cls);
    Py_XDECREF(LeftHandSide4Context_cls);
    Py_XDECREF(LeftHandSide3Context_cls);
    Py_XDECREF(AssignmentOperatorContext_cls);
    Py_XDECREF(ConditionalExpression1Context_cls);
    Py_XDECREF(ConditionalExpression2Context_cls);
    Py_XDECREF(ConditionalOrExpression1Context_cls);
    Py_XDECREF(ConditionalOrExpression2Context_cls);
    Py_XDECREF(ConditionalAndExpression2Context_cls);
    Py_XDECREF(ConditionalAndExpression1Context_cls);
    Py_XDECREF(InclusiveOrExpression2Context_cls);
    Py_XDECREF(InclusiveOrExpression1Context_cls);
    Py_XDECREF(ExclusiveOrExpression1Context_cls);
    Py_XDECREF(ExclusiveOrExpression2Context_cls);
    Py_XDECREF(AndExpression2Context_cls);
    Py_XDECREF(AndExpression1Context_cls);
    Py_XDECREF(EqualityExpression3Context_cls);
    Py_XDECREF(EqualityExpression2Context_cls);
    Py_XDECREF(EqualityExpression1Context_cls);
    Py_XDECREF(RelationalExpression1Context_cls);
    Py_XDECREF(RelationalExpression2Context_cls);
    Py_XDECREF(RelationalExpression5Context_cls);
    Py_XDECREF(RelationalExpression6Context_cls);
    Py_XDECREF(RelationalExpression3Context_cls);
    Py_XDECREF(RelationalExpression4Context_cls);
    Py_XDECREF(ShiftExpression1Context_cls);
    Py_XDECREF(ShiftExpression3Context_cls);
    Py_XDECREF(ShiftExpression2Context_cls);
    Py_XDECREF(ShiftExpression4Context_cls);
    Py_XDECREF(AdditiveExpression1Context_cls);
    Py_XDECREF(AdditiveExpression3Context_cls);
    Py_XDECREF(AdditiveExpressio2Context_cls);
    Py_XDECREF(MultiplicativeExpression1Context_cls);
    Py_XDECREF(MultiplicativeExpression4Context_cls);
    Py_XDECREF(MultiplicativeExpression3Context_cls);
    Py_XDECREF(MultiplicativeExpression2Context_cls);
    Py_XDECREF(UnaryExpression2Context_cls);
    Py_XDECREF(UnaryExpression1Context_cls);
    Py_XDECREF(UnaryExpression5Context_cls);
    Py_XDECREF(UnaryExpression4Context_cls);
    Py_XDECREF(UnaryExpression3Context_cls);
    Py_XDECREF(PreIncrementExpressionContext_cls);
    Py_XDECREF(PreDecrementExpressionContext_cls);
    Py_XDECREF(UnaryExpressionNotPlusMinus4Context_cls);
    Py_XDECREF(UnaryExpressionNotPlusMinus3Context_cls);
    Py_XDECREF(UnaryExpressionNotPlusMinus2Context_cls);
    Py_XDECREF(UnaryExpressionNotPlusMinus1Context_cls);
    Py_XDECREF(PostfixExpressionContext_cls);
    Py_XDECREF(PostIncrementExpressionContext_cls);
    Py_XDECREF(PostIncrementExpression_lf_postfixExpressionContext_cls);
    Py_XDECREF(PostDecrementExpressionContext_cls);
    Py_XDECREF(PostDecrementExpression_lf_postfixExpressionContext_cls);
    Py_XDECREF(CastExpression3Context_cls);
    Py_XDECREF(CastExpression1Context_cls);
    Py_XDECREF(CastExpression2Context_cls);
    Py_XDECREF(IdentifierContext_cls);
}


antlrcpp::Any SA_Java9_v2Translator::visitLiteral(Java9_v2Parser::LiteralContext *ctx){
    if(!LiteralContext_cls) LiteralContext_cls = PyObject_GetAttrString(translator->parser_cls, "LiteralContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, LiteralContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimitiveType1(Java9_v2Parser::PrimitiveType1Context *ctx){
    if(!PrimitiveType1Context_cls) PrimitiveType1Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimitiveType1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimitiveType1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimitiveType2(Java9_v2Parser::PrimitiveType2Context *ctx){
    if(!PrimitiveType2Context_cls) PrimitiveType2Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimitiveType2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimitiveType2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitNumericType1(Java9_v2Parser::NumericType1Context *ctx){
    if(!NumericType1Context_cls) NumericType1Context_cls = PyObject_GetAttrString(translator->parser_cls, "NumericType1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, NumericType1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitNumericType2(Java9_v2Parser::NumericType2Context *ctx){
    if(!NumericType2Context_cls) NumericType2Context_cls = PyObject_GetAttrString(translator->parser_cls, "NumericType2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, NumericType2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitIntegralType(Java9_v2Parser::IntegralTypeContext *ctx){
    if(!IntegralTypeContext_cls) IntegralTypeContext_cls = PyObject_GetAttrString(translator->parser_cls, "IntegralTypeContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, IntegralTypeContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitFloatingPointType(Java9_v2Parser::FloatingPointTypeContext *ctx){
    if(!FloatingPointTypeContext_cls) FloatingPointTypeContext_cls = PyObject_GetAttrString(translator->parser_cls, "FloatingPointTypeContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, FloatingPointTypeContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitReferenceType3(Java9_v2Parser::ReferenceType3Context *ctx){
    if(!ReferenceType3Context_cls) ReferenceType3Context_cls = PyObject_GetAttrString(translator->parser_cls, "ReferenceType3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ReferenceType3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitReferenceType2(Java9_v2Parser::ReferenceType2Context *ctx){
    if(!ReferenceType2Context_cls) ReferenceType2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ReferenceType2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ReferenceType2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitReferenceType1(Java9_v2Parser::ReferenceType1Context *ctx){
    if(!ReferenceType1Context_cls) ReferenceType1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ReferenceType1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ReferenceType1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassOrInterfaceType(Java9_v2Parser::ClassOrInterfaceTypeContext *ctx){
    if(!ClassOrInterfaceTypeContext_cls) ClassOrInterfaceTypeContext_cls = PyObject_GetAttrString(translator->parser_cls, "ClassOrInterfaceTypeContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassOrInterfaceTypeContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassType1(Java9_v2Parser::ClassType1Context *ctx){
    if(!ClassType1Context_cls) ClassType1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassType1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassType1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassType2(Java9_v2Parser::ClassType2Context *ctx){
    if(!ClassType2Context_cls) ClassType2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassType2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassType2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassType_lf_classOrInterfaceType(Java9_v2Parser::ClassType_lf_classOrInterfaceTypeContext *ctx){
    if(!ClassType_lf_classOrInterfaceTypeContext_cls) ClassType_lf_classOrInterfaceTypeContext_cls = PyObject_GetAttrString(translator->parser_cls, "ClassType_lf_classOrInterfaceTypeContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassType_lf_classOrInterfaceTypeContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassType_lfno_classOrInterfaceType(Java9_v2Parser::ClassType_lfno_classOrInterfaceTypeContext *ctx){
    if(!ClassType_lfno_classOrInterfaceTypeContext_cls) ClassType_lfno_classOrInterfaceTypeContext_cls = PyObject_GetAttrString(translator->parser_cls, "ClassType_lfno_classOrInterfaceTypeContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassType_lfno_classOrInterfaceTypeContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInterfaceType(Java9_v2Parser::InterfaceTypeContext *ctx){
    if(!InterfaceTypeContext_cls) InterfaceTypeContext_cls = PyObject_GetAttrString(translator->parser_cls, "InterfaceTypeContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InterfaceTypeContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInterfaceType_lf_classOrInterfaceType(Java9_v2Parser::InterfaceType_lf_classOrInterfaceTypeContext *ctx){
    if(!InterfaceType_lf_classOrInterfaceTypeContext_cls) InterfaceType_lf_classOrInterfaceTypeContext_cls = PyObject_GetAttrString(translator->parser_cls, "InterfaceType_lf_classOrInterfaceTypeContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InterfaceType_lf_classOrInterfaceTypeContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInterfaceType_lfno_classOrInterfaceType(Java9_v2Parser::InterfaceType_lfno_classOrInterfaceTypeContext *ctx){
    if(!InterfaceType_lfno_classOrInterfaceTypeContext_cls) InterfaceType_lfno_classOrInterfaceTypeContext_cls = PyObject_GetAttrString(translator->parser_cls, "InterfaceType_lfno_classOrInterfaceTypeContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InterfaceType_lfno_classOrInterfaceTypeContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeVariable(Java9_v2Parser::TypeVariableContext *ctx){
    if(!TypeVariableContext_cls) TypeVariableContext_cls = PyObject_GetAttrString(translator->parser_cls, "TypeVariableContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeVariableContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitArrayTyp3(Java9_v2Parser::ArrayTyp3Context *ctx){
    if(!ArrayTyp3Context_cls) ArrayTyp3Context_cls = PyObject_GetAttrString(translator->parser_cls, "ArrayTyp3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ArrayTyp3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitArrayType1(Java9_v2Parser::ArrayType1Context *ctx){
    if(!ArrayType1Context_cls) ArrayType1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ArrayType1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ArrayType1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitArrayType2(Java9_v2Parser::ArrayType2Context *ctx){
    if(!ArrayType2Context_cls) ArrayType2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ArrayType2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ArrayType2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitDims(Java9_v2Parser::DimsContext *ctx){
    if(!DimsContext_cls) DimsContext_cls = PyObject_GetAttrString(translator->parser_cls, "DimsContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, DimsContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeParameter(Java9_v2Parser::TypeParameterContext *ctx){
    if(!TypeParameterContext_cls) TypeParameterContext_cls = PyObject_GetAttrString(translator->parser_cls, "TypeParameterContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeParameterContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeParameterModifier(Java9_v2Parser::TypeParameterModifierContext *ctx){
    if(!TypeParameterModifierContext_cls) TypeParameterModifierContext_cls = PyObject_GetAttrString(translator->parser_cls, "TypeParameterModifierContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeParameterModifierContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeBound2(Java9_v2Parser::TypeBound2Context *ctx){
    if(!TypeBound2Context_cls) TypeBound2Context_cls = PyObject_GetAttrString(translator->parser_cls, "TypeBound2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeBound2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeBound1(Java9_v2Parser::TypeBound1Context *ctx){
    if(!TypeBound1Context_cls) TypeBound1Context_cls = PyObject_GetAttrString(translator->parser_cls, "TypeBound1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeBound1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAdditionalBound(Java9_v2Parser::AdditionalBoundContext *ctx){
    if(!AdditionalBoundContext_cls) AdditionalBoundContext_cls = PyObject_GetAttrString(translator->parser_cls, "AdditionalBoundContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AdditionalBoundContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeArguments(Java9_v2Parser::TypeArgumentsContext *ctx){
    if(!TypeArgumentsContext_cls) TypeArgumentsContext_cls = PyObject_GetAttrString(translator->parser_cls, "TypeArgumentsContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeArgumentsContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeArgumentList(Java9_v2Parser::TypeArgumentListContext *ctx){
    if(!TypeArgumentListContext_cls) TypeArgumentListContext_cls = PyObject_GetAttrString(translator->parser_cls, "TypeArgumentListContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeArgumentListContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeArgument1(Java9_v2Parser::TypeArgument1Context *ctx){
    if(!TypeArgument1Context_cls) TypeArgument1Context_cls = PyObject_GetAttrString(translator->parser_cls, "TypeArgument1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeArgument1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeArgument2(Java9_v2Parser::TypeArgument2Context *ctx){
    if(!TypeArgument2Context_cls) TypeArgument2Context_cls = PyObject_GetAttrString(translator->parser_cls, "TypeArgument2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeArgument2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitWildcard(Java9_v2Parser::WildcardContext *ctx){
    if(!WildcardContext_cls) WildcardContext_cls = PyObject_GetAttrString(translator->parser_cls, "WildcardContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, WildcardContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitWildcardBound2(Java9_v2Parser::WildcardBound2Context *ctx){
    if(!WildcardBound2Context_cls) WildcardBound2Context_cls = PyObject_GetAttrString(translator->parser_cls, "WildcardBound2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, WildcardBound2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitWildcardBounds1(Java9_v2Parser::WildcardBounds1Context *ctx){
    if(!WildcardBounds1Context_cls) WildcardBounds1Context_cls = PyObject_GetAttrString(translator->parser_cls, "WildcardBounds1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, WildcardBounds1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitModuleName1(Java9_v2Parser::ModuleName1Context *ctx){
    if(!ModuleName1Context_cls) ModuleName1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ModuleName1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ModuleName1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitModuleName2(Java9_v2Parser::ModuleName2Context *ctx){
    if(!ModuleName2Context_cls) ModuleName2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ModuleName2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ModuleName2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPackageName2(Java9_v2Parser::PackageName2Context *ctx){
    if(!PackageName2Context_cls) PackageName2Context_cls = PyObject_GetAttrString(translator->parser_cls, "PackageName2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PackageName2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPackageName1(Java9_v2Parser::PackageName1Context *ctx){
    if(!PackageName1Context_cls) PackageName1Context_cls = PyObject_GetAttrString(translator->parser_cls, "PackageName1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PackageName1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeName1(Java9_v2Parser::TypeName1Context *ctx){
    if(!TypeName1Context_cls) TypeName1Context_cls = PyObject_GetAttrString(translator->parser_cls, "TypeName1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeName1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeName2(Java9_v2Parser::TypeName2Context *ctx){
    if(!TypeName2Context_cls) TypeName2Context_cls = PyObject_GetAttrString(translator->parser_cls, "TypeName2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeName2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPackageOrTypeName1(Java9_v2Parser::PackageOrTypeName1Context *ctx){
    if(!PackageOrTypeName1Context_cls) PackageOrTypeName1Context_cls = PyObject_GetAttrString(translator->parser_cls, "PackageOrTypeName1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PackageOrTypeName1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPackageOrTypeName2(Java9_v2Parser::PackageOrTypeName2Context *ctx){
    if(!PackageOrTypeName2Context_cls) PackageOrTypeName2Context_cls = PyObject_GetAttrString(translator->parser_cls, "PackageOrTypeName2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PackageOrTypeName2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitExpressionName2(Java9_v2Parser::ExpressionName2Context *ctx){
    if(!ExpressionName2Context_cls) ExpressionName2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ExpressionName2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ExpressionName2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitExpressionName1(Java9_v2Parser::ExpressionName1Context *ctx){
    if(!ExpressionName1Context_cls) ExpressionName1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ExpressionName1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ExpressionName1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodName(Java9_v2Parser::MethodNameContext *ctx){
    if(!MethodNameContext_cls) MethodNameContext_cls = PyObject_GetAttrString(translator->parser_cls, "MethodNameContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodNameContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAmbiguousName1(Java9_v2Parser::AmbiguousName1Context *ctx){
    if(!AmbiguousName1Context_cls) AmbiguousName1Context_cls = PyObject_GetAttrString(translator->parser_cls, "AmbiguousName1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AmbiguousName1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAmbiguousName2(Java9_v2Parser::AmbiguousName2Context *ctx){
    if(!AmbiguousName2Context_cls) AmbiguousName2Context_cls = PyObject_GetAttrString(translator->parser_cls, "AmbiguousName2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AmbiguousName2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitCompilationUnit2(Java9_v2Parser::CompilationUnit2Context *ctx){
    if(!CompilationUnit2Context_cls) CompilationUnit2Context_cls = PyObject_GetAttrString(translator->parser_cls, "CompilationUnit2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, CompilationUnit2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitCompilationUnit1(Java9_v2Parser::CompilationUnit1Context *ctx){
    if(!CompilationUnit1Context_cls) CompilationUnit1Context_cls = PyObject_GetAttrString(translator->parser_cls, "CompilationUnit1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, CompilationUnit1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitOrdinaryCompilation(Java9_v2Parser::OrdinaryCompilationContext *ctx){
    if(!OrdinaryCompilationContext_cls) OrdinaryCompilationContext_cls = PyObject_GetAttrString(translator->parser_cls, "OrdinaryCompilationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, OrdinaryCompilationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitModularCompilation(Java9_v2Parser::ModularCompilationContext *ctx){
    if(!ModularCompilationContext_cls) ModularCompilationContext_cls = PyObject_GetAttrString(translator->parser_cls, "ModularCompilationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ModularCompilationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPackageDeclaration(Java9_v2Parser::PackageDeclarationContext *ctx){
    if(!PackageDeclarationContext_cls) PackageDeclarationContext_cls = PyObject_GetAttrString(translator->parser_cls, "PackageDeclarationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PackageDeclarationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPackageModifier(Java9_v2Parser::PackageModifierContext *ctx){
    if(!PackageModifierContext_cls) PackageModifierContext_cls = PyObject_GetAttrString(translator->parser_cls, "PackageModifierContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PackageModifierContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitImportDeclaration3(Java9_v2Parser::ImportDeclaration3Context *ctx){
    if(!ImportDeclaration3Context_cls) ImportDeclaration3Context_cls = PyObject_GetAttrString(translator->parser_cls, "ImportDeclaration3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ImportDeclaration3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitImportDeclaration4(Java9_v2Parser::ImportDeclaration4Context *ctx){
    if(!ImportDeclaration4Context_cls) ImportDeclaration4Context_cls = PyObject_GetAttrString(translator->parser_cls, "ImportDeclaration4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ImportDeclaration4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitImportDeclaration1(Java9_v2Parser::ImportDeclaration1Context *ctx){
    if(!ImportDeclaration1Context_cls) ImportDeclaration1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ImportDeclaration1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ImportDeclaration1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitImportDeclaration2(Java9_v2Parser::ImportDeclaration2Context *ctx){
    if(!ImportDeclaration2Context_cls) ImportDeclaration2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ImportDeclaration2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ImportDeclaration2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitSingleTypeImportDeclaration(Java9_v2Parser::SingleTypeImportDeclarationContext *ctx){
    if(!SingleTypeImportDeclarationContext_cls) SingleTypeImportDeclarationContext_cls = PyObject_GetAttrString(translator->parser_cls, "SingleTypeImportDeclarationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, SingleTypeImportDeclarationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeImportOnDemandDeclaration(Java9_v2Parser::TypeImportOnDemandDeclarationContext *ctx){
    if(!TypeImportOnDemandDeclarationContext_cls) TypeImportOnDemandDeclarationContext_cls = PyObject_GetAttrString(translator->parser_cls, "TypeImportOnDemandDeclarationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeImportOnDemandDeclarationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitSingleStaticImportDeclaration(Java9_v2Parser::SingleStaticImportDeclarationContext *ctx){
    if(!SingleStaticImportDeclarationContext_cls) SingleStaticImportDeclarationContext_cls = PyObject_GetAttrString(translator->parser_cls, "SingleStaticImportDeclarationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, SingleStaticImportDeclarationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStaticImportOnDemandDeclaration(Java9_v2Parser::StaticImportOnDemandDeclarationContext *ctx){
    if(!StaticImportOnDemandDeclarationContext_cls) StaticImportOnDemandDeclarationContext_cls = PyObject_GetAttrString(translator->parser_cls, "StaticImportOnDemandDeclarationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StaticImportOnDemandDeclarationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeDeclaration2(Java9_v2Parser::TypeDeclaration2Context *ctx){
    if(!TypeDeclaration2Context_cls) TypeDeclaration2Context_cls = PyObject_GetAttrString(translator->parser_cls, "TypeDeclaration2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeDeclaration2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeDeclaration3(Java9_v2Parser::TypeDeclaration3Context *ctx){
    if(!TypeDeclaration3Context_cls) TypeDeclaration3Context_cls = PyObject_GetAttrString(translator->parser_cls, "TypeDeclaration3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeDeclaration3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeDeclaration1(Java9_v2Parser::TypeDeclaration1Context *ctx){
    if(!TypeDeclaration1Context_cls) TypeDeclaration1Context_cls = PyObject_GetAttrString(translator->parser_cls, "TypeDeclaration1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeDeclaration1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitModuleDeclaration(Java9_v2Parser::ModuleDeclarationContext *ctx){
    if(!ModuleDeclarationContext_cls) ModuleDeclarationContext_cls = PyObject_GetAttrString(translator->parser_cls, "ModuleDeclarationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ModuleDeclarationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitModuleDirective5(Java9_v2Parser::ModuleDirective5Context *ctx){
    if(!ModuleDirective5Context_cls) ModuleDirective5Context_cls = PyObject_GetAttrString(translator->parser_cls, "ModuleDirective5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ModuleDirective5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitModuleDirective4(Java9_v2Parser::ModuleDirective4Context *ctx){
    if(!ModuleDirective4Context_cls) ModuleDirective4Context_cls = PyObject_GetAttrString(translator->parser_cls, "ModuleDirective4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ModuleDirective4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitModuleDirective1(Java9_v2Parser::ModuleDirective1Context *ctx){
    if(!ModuleDirective1Context_cls) ModuleDirective1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ModuleDirective1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ModuleDirective1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitModuleDirective2(Java9_v2Parser::ModuleDirective2Context *ctx){
    if(!ModuleDirective2Context_cls) ModuleDirective2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ModuleDirective2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ModuleDirective2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitModuleDirectiv3(Java9_v2Parser::ModuleDirectiv3Context *ctx){
    if(!ModuleDirectiv3Context_cls) ModuleDirectiv3Context_cls = PyObject_GetAttrString(translator->parser_cls, "ModuleDirectiv3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ModuleDirectiv3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitRequiresModifier(Java9_v2Parser::RequiresModifierContext *ctx){
    if(!RequiresModifierContext_cls) RequiresModifierContext_cls = PyObject_GetAttrString(translator->parser_cls, "RequiresModifierContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, RequiresModifierContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassDeclaration1(Java9_v2Parser::ClassDeclaration1Context *ctx){
    if(!ClassDeclaration1Context_cls) ClassDeclaration1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassDeclaration1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassDeclaration1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassDeclaration2(Java9_v2Parser::ClassDeclaration2Context *ctx){
    if(!ClassDeclaration2Context_cls) ClassDeclaration2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassDeclaration2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassDeclaration2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitNormalClassDeclaration(Java9_v2Parser::NormalClassDeclarationContext *ctx){
    if(!NormalClassDeclarationContext_cls) NormalClassDeclarationContext_cls = PyObject_GetAttrString(translator->parser_cls, "NormalClassDeclarationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, NormalClassDeclarationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassModifier(Java9_v2Parser::ClassModifierContext *ctx){
    if(!ClassModifierContext_cls) ClassModifierContext_cls = PyObject_GetAttrString(translator->parser_cls, "ClassModifierContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassModifierContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeParameters(Java9_v2Parser::TypeParametersContext *ctx){
    if(!TypeParametersContext_cls) TypeParametersContext_cls = PyObject_GetAttrString(translator->parser_cls, "TypeParametersContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeParametersContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeParameterList(Java9_v2Parser::TypeParameterListContext *ctx){
    if(!TypeParameterListContext_cls) TypeParameterListContext_cls = PyObject_GetAttrString(translator->parser_cls, "TypeParameterListContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeParameterListContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitSuperclass(Java9_v2Parser::SuperclassContext *ctx){
    if(!SuperclassContext_cls) SuperclassContext_cls = PyObject_GetAttrString(translator->parser_cls, "SuperclassContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, SuperclassContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitSuperinterfaces(Java9_v2Parser::SuperinterfacesContext *ctx){
    if(!SuperinterfacesContext_cls) SuperinterfacesContext_cls = PyObject_GetAttrString(translator->parser_cls, "SuperinterfacesContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, SuperinterfacesContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInterfaceTypeList(Java9_v2Parser::InterfaceTypeListContext *ctx){
    if(!InterfaceTypeListContext_cls) InterfaceTypeListContext_cls = PyObject_GetAttrString(translator->parser_cls, "InterfaceTypeListContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InterfaceTypeListContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassBody(Java9_v2Parser::ClassBodyContext *ctx){
    if(!ClassBodyContext_cls) ClassBodyContext_cls = PyObject_GetAttrString(translator->parser_cls, "ClassBodyContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassBodyContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassBodyDeclaration4(Java9_v2Parser::ClassBodyDeclaration4Context *ctx){
    if(!ClassBodyDeclaration4Context_cls) ClassBodyDeclaration4Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassBodyDeclaration4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassBodyDeclaration4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassBodyDeclaration1(Java9_v2Parser::ClassBodyDeclaration1Context *ctx){
    if(!ClassBodyDeclaration1Context_cls) ClassBodyDeclaration1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassBodyDeclaration1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassBodyDeclaration1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassBodyDeclaration3(Java9_v2Parser::ClassBodyDeclaration3Context *ctx){
    if(!ClassBodyDeclaration3Context_cls) ClassBodyDeclaration3Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassBodyDeclaration3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassBodyDeclaration3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassBodyDeclaration2(Java9_v2Parser::ClassBodyDeclaration2Context *ctx){
    if(!ClassBodyDeclaration2Context_cls) ClassBodyDeclaration2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassBodyDeclaration2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassBodyDeclaration2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassMemberDeclaration4(Java9_v2Parser::ClassMemberDeclaration4Context *ctx){
    if(!ClassMemberDeclaration4Context_cls) ClassMemberDeclaration4Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassMemberDeclaration4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassMemberDeclaration4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassMemberDeclaration5(Java9_v2Parser::ClassMemberDeclaration5Context *ctx){
    if(!ClassMemberDeclaration5Context_cls) ClassMemberDeclaration5Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassMemberDeclaration5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassMemberDeclaration5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassMemberDeclaration2(Java9_v2Parser::ClassMemberDeclaration2Context *ctx){
    if(!ClassMemberDeclaration2Context_cls) ClassMemberDeclaration2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassMemberDeclaration2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassMemberDeclaration2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassMemberDeclaration3(Java9_v2Parser::ClassMemberDeclaration3Context *ctx){
    if(!ClassMemberDeclaration3Context_cls) ClassMemberDeclaration3Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassMemberDeclaration3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassMemberDeclaration3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassMemberDeclaration1(Java9_v2Parser::ClassMemberDeclaration1Context *ctx){
    if(!ClassMemberDeclaration1Context_cls) ClassMemberDeclaration1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassMemberDeclaration1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassMemberDeclaration1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitFieldDeclaration(Java9_v2Parser::FieldDeclarationContext *ctx){
    if(!FieldDeclarationContext_cls) FieldDeclarationContext_cls = PyObject_GetAttrString(translator->parser_cls, "FieldDeclarationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, FieldDeclarationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitFieldModifier(Java9_v2Parser::FieldModifierContext *ctx){
    if(!FieldModifierContext_cls) FieldModifierContext_cls = PyObject_GetAttrString(translator->parser_cls, "FieldModifierContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, FieldModifierContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitVariableDeclaratorList(Java9_v2Parser::VariableDeclaratorListContext *ctx){
    if(!VariableDeclaratorListContext_cls) VariableDeclaratorListContext_cls = PyObject_GetAttrString(translator->parser_cls, "VariableDeclaratorListContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, VariableDeclaratorListContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitVariableDeclarator(Java9_v2Parser::VariableDeclaratorContext *ctx){
    if(!VariableDeclaratorContext_cls) VariableDeclaratorContext_cls = PyObject_GetAttrString(translator->parser_cls, "VariableDeclaratorContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, VariableDeclaratorContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitVariableDeclaratorId(Java9_v2Parser::VariableDeclaratorIdContext *ctx){
    if(!VariableDeclaratorIdContext_cls) VariableDeclaratorIdContext_cls = PyObject_GetAttrString(translator->parser_cls, "VariableDeclaratorIdContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, VariableDeclaratorIdContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitVariableInitializer1(Java9_v2Parser::VariableInitializer1Context *ctx){
    if(!VariableInitializer1Context_cls) VariableInitializer1Context_cls = PyObject_GetAttrString(translator->parser_cls, "VariableInitializer1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, VariableInitializer1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitVariableInitializer2(Java9_v2Parser::VariableInitializer2Context *ctx){
    if(!VariableInitializer2Context_cls) VariableInitializer2Context_cls = PyObject_GetAttrString(translator->parser_cls, "VariableInitializer2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, VariableInitializer2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannType2(Java9_v2Parser::UnannType2Context *ctx){
    if(!UnannType2Context_cls) UnannType2Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnannType2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannType2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannType1(Java9_v2Parser::UnannType1Context *ctx){
    if(!UnannType1Context_cls) UnannType1Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnannType1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannType1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannPrimitiveType2(Java9_v2Parser::UnannPrimitiveType2Context *ctx){
    if(!UnannPrimitiveType2Context_cls) UnannPrimitiveType2Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnannPrimitiveType2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannPrimitiveType2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannPrimitiveType1(Java9_v2Parser::UnannPrimitiveType1Context *ctx){
    if(!UnannPrimitiveType1Context_cls) UnannPrimitiveType1Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnannPrimitiveType1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannPrimitiveType1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannReferenceType3(Java9_v2Parser::UnannReferenceType3Context *ctx){
    if(!UnannReferenceType3Context_cls) UnannReferenceType3Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnannReferenceType3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannReferenceType3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannReferenceType1(Java9_v2Parser::UnannReferenceType1Context *ctx){
    if(!UnannReferenceType1Context_cls) UnannReferenceType1Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnannReferenceType1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannReferenceType1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannReferenceType2(Java9_v2Parser::UnannReferenceType2Context *ctx){
    if(!UnannReferenceType2Context_cls) UnannReferenceType2Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnannReferenceType2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannReferenceType2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannClassOrInterfaceType(Java9_v2Parser::UnannClassOrInterfaceTypeContext *ctx){
    if(!UnannClassOrInterfaceTypeContext_cls) UnannClassOrInterfaceTypeContext_cls = PyObject_GetAttrString(translator->parser_cls, "UnannClassOrInterfaceTypeContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannClassOrInterfaceTypeContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannClassType2(Java9_v2Parser::UnannClassType2Context *ctx){
    if(!UnannClassType2Context_cls) UnannClassType2Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnannClassType2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannClassType2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannClassType1(Java9_v2Parser::UnannClassType1Context *ctx){
    if(!UnannClassType1Context_cls) UnannClassType1Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnannClassType1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannClassType1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannClassType_lf_unannClassOrInterfaceType(Java9_v2Parser::UnannClassType_lf_unannClassOrInterfaceTypeContext *ctx){
    if(!UnannClassType_lf_unannClassOrInterfaceTypeContext_cls) UnannClassType_lf_unannClassOrInterfaceTypeContext_cls = PyObject_GetAttrString(translator->parser_cls, "UnannClassType_lf_unannClassOrInterfaceTypeContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannClassType_lf_unannClassOrInterfaceTypeContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannClassType_lfno_unannClassOrInterfaceType(Java9_v2Parser::UnannClassType_lfno_unannClassOrInterfaceTypeContext *ctx){
    if(!UnannClassType_lfno_unannClassOrInterfaceTypeContext_cls) UnannClassType_lfno_unannClassOrInterfaceTypeContext_cls = PyObject_GetAttrString(translator->parser_cls, "UnannClassType_lfno_unannClassOrInterfaceTypeContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannClassType_lfno_unannClassOrInterfaceTypeContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannInterfaceType(Java9_v2Parser::UnannInterfaceTypeContext *ctx){
    if(!UnannInterfaceTypeContext_cls) UnannInterfaceTypeContext_cls = PyObject_GetAttrString(translator->parser_cls, "UnannInterfaceTypeContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannInterfaceTypeContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannInterfaceType_lf_unannClassOrInterfaceType(Java9_v2Parser::UnannInterfaceType_lf_unannClassOrInterfaceTypeContext *ctx){
    if(!UnannInterfaceType_lf_unannClassOrInterfaceTypeContext_cls) UnannInterfaceType_lf_unannClassOrInterfaceTypeContext_cls = PyObject_GetAttrString(translator->parser_cls, "UnannInterfaceType_lf_unannClassOrInterfaceTypeContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannInterfaceType_lf_unannClassOrInterfaceTypeContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannInterfaceType_lfno_unannClassOrInterfaceType(Java9_v2Parser::UnannInterfaceType_lfno_unannClassOrInterfaceTypeContext *ctx){
    if(!UnannInterfaceType_lfno_unannClassOrInterfaceTypeContext_cls) UnannInterfaceType_lfno_unannClassOrInterfaceTypeContext_cls = PyObject_GetAttrString(translator->parser_cls, "UnannInterfaceType_lfno_unannClassOrInterfaceTypeContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannInterfaceType_lfno_unannClassOrInterfaceTypeContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannTypeVariable(Java9_v2Parser::UnannTypeVariableContext *ctx){
    if(!UnannTypeVariableContext_cls) UnannTypeVariableContext_cls = PyObject_GetAttrString(translator->parser_cls, "UnannTypeVariableContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannTypeVariableContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannArrayType2(Java9_v2Parser::UnannArrayType2Context *ctx){
    if(!UnannArrayType2Context_cls) UnannArrayType2Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnannArrayType2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannArrayType2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannArrayType1(Java9_v2Parser::UnannArrayType1Context *ctx){
    if(!UnannArrayType1Context_cls) UnannArrayType1Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnannArrayType1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannArrayType1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnannArrayTyp3(Java9_v2Parser::UnannArrayTyp3Context *ctx){
    if(!UnannArrayTyp3Context_cls) UnannArrayTyp3Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnannArrayTyp3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnannArrayTyp3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodDeclaration(Java9_v2Parser::MethodDeclarationContext *ctx){
    if(!MethodDeclarationContext_cls) MethodDeclarationContext_cls = PyObject_GetAttrString(translator->parser_cls, "MethodDeclarationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodDeclarationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodModifier(Java9_v2Parser::MethodModifierContext *ctx){
    if(!MethodModifierContext_cls) MethodModifierContext_cls = PyObject_GetAttrString(translator->parser_cls, "MethodModifierContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodModifierContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodHeader(Java9_v2Parser::MethodHeaderContext *ctx){
    if(!MethodHeaderContext_cls) MethodHeaderContext_cls = PyObject_GetAttrString(translator->parser_cls, "MethodHeaderContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodHeaderContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitResult(Java9_v2Parser::ResultContext *ctx){
    if(!ResultContext_cls) ResultContext_cls = PyObject_GetAttrString(translator->parser_cls, "ResultContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ResultContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodDeclarator(Java9_v2Parser::MethodDeclaratorContext *ctx){
    if(!MethodDeclaratorContext_cls) MethodDeclaratorContext_cls = PyObject_GetAttrString(translator->parser_cls, "MethodDeclaratorContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodDeclaratorContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitFormalParameterList3(Java9_v2Parser::FormalParameterList3Context *ctx){
    if(!FormalParameterList3Context_cls) FormalParameterList3Context_cls = PyObject_GetAttrString(translator->parser_cls, "FormalParameterList3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, FormalParameterList3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitFormalParameterList2(Java9_v2Parser::FormalParameterList2Context *ctx){
    if(!FormalParameterList2Context_cls) FormalParameterList2Context_cls = PyObject_GetAttrString(translator->parser_cls, "FormalParameterList2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, FormalParameterList2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitFormalParameterList1(Java9_v2Parser::FormalParameterList1Context *ctx){
    if(!FormalParameterList1Context_cls) FormalParameterList1Context_cls = PyObject_GetAttrString(translator->parser_cls, "FormalParameterList1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, FormalParameterList1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitFormalParameters2(Java9_v2Parser::FormalParameters2Context *ctx){
    if(!FormalParameters2Context_cls) FormalParameters2Context_cls = PyObject_GetAttrString(translator->parser_cls, "FormalParameters2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, FormalParameters2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitFormalParameters1(Java9_v2Parser::FormalParameters1Context *ctx){
    if(!FormalParameters1Context_cls) FormalParameters1Context_cls = PyObject_GetAttrString(translator->parser_cls, "FormalParameters1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, FormalParameters1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitFormalParameter(Java9_v2Parser::FormalParameterContext *ctx){
    if(!FormalParameterContext_cls) FormalParameterContext_cls = PyObject_GetAttrString(translator->parser_cls, "FormalParameterContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, FormalParameterContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitVariableModifier(Java9_v2Parser::VariableModifierContext *ctx){
    if(!VariableModifierContext_cls) VariableModifierContext_cls = PyObject_GetAttrString(translator->parser_cls, "VariableModifierContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, VariableModifierContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitLastFormalParameter2(Java9_v2Parser::LastFormalParameter2Context *ctx){
    if(!LastFormalParameter2Context_cls) LastFormalParameter2Context_cls = PyObject_GetAttrString(translator->parser_cls, "LastFormalParameter2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, LastFormalParameter2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitLastFormalParameter1(Java9_v2Parser::LastFormalParameter1Context *ctx){
    if(!LastFormalParameter1Context_cls) LastFormalParameter1Context_cls = PyObject_GetAttrString(translator->parser_cls, "LastFormalParameter1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, LastFormalParameter1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitReceiverParameter(Java9_v2Parser::ReceiverParameterContext *ctx){
    if(!ReceiverParameterContext_cls) ReceiverParameterContext_cls = PyObject_GetAttrString(translator->parser_cls, "ReceiverParameterContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ReceiverParameterContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitThrows_(Java9_v2Parser::Throws_Context *ctx){
    if(!Throws_Context_cls) Throws_Context_cls = PyObject_GetAttrString(translator->parser_cls, "Throws_Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, Throws_Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitExceptionTypeList(Java9_v2Parser::ExceptionTypeListContext *ctx){
    if(!ExceptionTypeListContext_cls) ExceptionTypeListContext_cls = PyObject_GetAttrString(translator->parser_cls, "ExceptionTypeListContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ExceptionTypeListContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitExceptionType2(Java9_v2Parser::ExceptionType2Context *ctx){
    if(!ExceptionType2Context_cls) ExceptionType2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ExceptionType2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ExceptionType2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitExceptionType1(Java9_v2Parser::ExceptionType1Context *ctx){
    if(!ExceptionType1Context_cls) ExceptionType1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ExceptionType1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ExceptionType1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodBody(Java9_v2Parser::MethodBodyContext *ctx){
    if(!MethodBodyContext_cls) MethodBodyContext_cls = PyObject_GetAttrString(translator->parser_cls, "MethodBodyContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodBodyContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInstanceInitializer(Java9_v2Parser::InstanceInitializerContext *ctx){
    if(!InstanceInitializerContext_cls) InstanceInitializerContext_cls = PyObject_GetAttrString(translator->parser_cls, "InstanceInitializerContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InstanceInitializerContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStaticInitializer(Java9_v2Parser::StaticInitializerContext *ctx){
    if(!StaticInitializerContext_cls) StaticInitializerContext_cls = PyObject_GetAttrString(translator->parser_cls, "StaticInitializerContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StaticInitializerContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitConstructorDeclaration(Java9_v2Parser::ConstructorDeclarationContext *ctx){
    if(!ConstructorDeclarationContext_cls) ConstructorDeclarationContext_cls = PyObject_GetAttrString(translator->parser_cls, "ConstructorDeclarationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ConstructorDeclarationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitConstructorModifier(Java9_v2Parser::ConstructorModifierContext *ctx){
    if(!ConstructorModifierContext_cls) ConstructorModifierContext_cls = PyObject_GetAttrString(translator->parser_cls, "ConstructorModifierContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ConstructorModifierContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitConstructorDeclarator(Java9_v2Parser::ConstructorDeclaratorContext *ctx){
    if(!ConstructorDeclaratorContext_cls) ConstructorDeclaratorContext_cls = PyObject_GetAttrString(translator->parser_cls, "ConstructorDeclaratorContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ConstructorDeclaratorContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitSimpleTypeName(Java9_v2Parser::SimpleTypeNameContext *ctx){
    if(!SimpleTypeNameContext_cls) SimpleTypeNameContext_cls = PyObject_GetAttrString(translator->parser_cls, "SimpleTypeNameContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, SimpleTypeNameContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitConstructorBody(Java9_v2Parser::ConstructorBodyContext *ctx){
    if(!ConstructorBodyContext_cls) ConstructorBodyContext_cls = PyObject_GetAttrString(translator->parser_cls, "ConstructorBodyContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ConstructorBodyContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitExplicitConstructorInvocation1(Java9_v2Parser::ExplicitConstructorInvocation1Context *ctx){
    if(!ExplicitConstructorInvocation1Context_cls) ExplicitConstructorInvocation1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ExplicitConstructorInvocation1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ExplicitConstructorInvocation1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitExplicitConstructorInvocation4(Java9_v2Parser::ExplicitConstructorInvocation4Context *ctx){
    if(!ExplicitConstructorInvocation4Context_cls) ExplicitConstructorInvocation4Context_cls = PyObject_GetAttrString(translator->parser_cls, "ExplicitConstructorInvocation4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ExplicitConstructorInvocation4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitExplicitConstructorInvocation2(Java9_v2Parser::ExplicitConstructorInvocation2Context *ctx){
    if(!ExplicitConstructorInvocation2Context_cls) ExplicitConstructorInvocation2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ExplicitConstructorInvocation2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ExplicitConstructorInvocation2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitExplicitConstructorInvocation3(Java9_v2Parser::ExplicitConstructorInvocation3Context *ctx){
    if(!ExplicitConstructorInvocation3Context_cls) ExplicitConstructorInvocation3Context_cls = PyObject_GetAttrString(translator->parser_cls, "ExplicitConstructorInvocation3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ExplicitConstructorInvocation3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitEnumDeclaration(Java9_v2Parser::EnumDeclarationContext *ctx){
    if(!EnumDeclarationContext_cls) EnumDeclarationContext_cls = PyObject_GetAttrString(translator->parser_cls, "EnumDeclarationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, EnumDeclarationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitEnumBody(Java9_v2Parser::EnumBodyContext *ctx){
    if(!EnumBodyContext_cls) EnumBodyContext_cls = PyObject_GetAttrString(translator->parser_cls, "EnumBodyContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, EnumBodyContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitEnumConstantList(Java9_v2Parser::EnumConstantListContext *ctx){
    if(!EnumConstantListContext_cls) EnumConstantListContext_cls = PyObject_GetAttrString(translator->parser_cls, "EnumConstantListContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, EnumConstantListContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitEnumConstant(Java9_v2Parser::EnumConstantContext *ctx){
    if(!EnumConstantContext_cls) EnumConstantContext_cls = PyObject_GetAttrString(translator->parser_cls, "EnumConstantContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, EnumConstantContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitEnumConstantModifier(Java9_v2Parser::EnumConstantModifierContext *ctx){
    if(!EnumConstantModifierContext_cls) EnumConstantModifierContext_cls = PyObject_GetAttrString(translator->parser_cls, "EnumConstantModifierContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, EnumConstantModifierContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitEnumBodyDeclarations(Java9_v2Parser::EnumBodyDeclarationsContext *ctx){
    if(!EnumBodyDeclarationsContext_cls) EnumBodyDeclarationsContext_cls = PyObject_GetAttrString(translator->parser_cls, "EnumBodyDeclarationsContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, EnumBodyDeclarationsContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInterfaceDeclaration1(Java9_v2Parser::InterfaceDeclaration1Context *ctx){
    if(!InterfaceDeclaration1Context_cls) InterfaceDeclaration1Context_cls = PyObject_GetAttrString(translator->parser_cls, "InterfaceDeclaration1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InterfaceDeclaration1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInterfaceDeclaration2(Java9_v2Parser::InterfaceDeclaration2Context *ctx){
    if(!InterfaceDeclaration2Context_cls) InterfaceDeclaration2Context_cls = PyObject_GetAttrString(translator->parser_cls, "InterfaceDeclaration2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InterfaceDeclaration2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitNormalInterfaceDeclaration(Java9_v2Parser::NormalInterfaceDeclarationContext *ctx){
    if(!NormalInterfaceDeclarationContext_cls) NormalInterfaceDeclarationContext_cls = PyObject_GetAttrString(translator->parser_cls, "NormalInterfaceDeclarationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, NormalInterfaceDeclarationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInterfaceModifier(Java9_v2Parser::InterfaceModifierContext *ctx){
    if(!InterfaceModifierContext_cls) InterfaceModifierContext_cls = PyObject_GetAttrString(translator->parser_cls, "InterfaceModifierContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InterfaceModifierContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitExtendsInterfaces(Java9_v2Parser::ExtendsInterfacesContext *ctx){
    if(!ExtendsInterfacesContext_cls) ExtendsInterfacesContext_cls = PyObject_GetAttrString(translator->parser_cls, "ExtendsInterfacesContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ExtendsInterfacesContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInterfaceBody(Java9_v2Parser::InterfaceBodyContext *ctx){
    if(!InterfaceBodyContext_cls) InterfaceBodyContext_cls = PyObject_GetAttrString(translator->parser_cls, "InterfaceBodyContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InterfaceBodyContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInterfaceMemberDeclaration5(Java9_v2Parser::InterfaceMemberDeclaration5Context *ctx){
    if(!InterfaceMemberDeclaration5Context_cls) InterfaceMemberDeclaration5Context_cls = PyObject_GetAttrString(translator->parser_cls, "InterfaceMemberDeclaration5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InterfaceMemberDeclaration5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInterfaceMemberDeclaration4(Java9_v2Parser::InterfaceMemberDeclaration4Context *ctx){
    if(!InterfaceMemberDeclaration4Context_cls) InterfaceMemberDeclaration4Context_cls = PyObject_GetAttrString(translator->parser_cls, "InterfaceMemberDeclaration4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InterfaceMemberDeclaration4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInterfaceMemberDeclaration3(Java9_v2Parser::InterfaceMemberDeclaration3Context *ctx){
    if(!InterfaceMemberDeclaration3Context_cls) InterfaceMemberDeclaration3Context_cls = PyObject_GetAttrString(translator->parser_cls, "InterfaceMemberDeclaration3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InterfaceMemberDeclaration3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInterfaceMemberDeclaration2(Java9_v2Parser::InterfaceMemberDeclaration2Context *ctx){
    if(!InterfaceMemberDeclaration2Context_cls) InterfaceMemberDeclaration2Context_cls = PyObject_GetAttrString(translator->parser_cls, "InterfaceMemberDeclaration2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InterfaceMemberDeclaration2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInterfaceMemberDeclaration1(Java9_v2Parser::InterfaceMemberDeclaration1Context *ctx){
    if(!InterfaceMemberDeclaration1Context_cls) InterfaceMemberDeclaration1Context_cls = PyObject_GetAttrString(translator->parser_cls, "InterfaceMemberDeclaration1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InterfaceMemberDeclaration1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitConstantDeclaration(Java9_v2Parser::ConstantDeclarationContext *ctx){
    if(!ConstantDeclarationContext_cls) ConstantDeclarationContext_cls = PyObject_GetAttrString(translator->parser_cls, "ConstantDeclarationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ConstantDeclarationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitConstantModifier(Java9_v2Parser::ConstantModifierContext *ctx){
    if(!ConstantModifierContext_cls) ConstantModifierContext_cls = PyObject_GetAttrString(translator->parser_cls, "ConstantModifierContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ConstantModifierContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInterfaceMethodDeclaration(Java9_v2Parser::InterfaceMethodDeclarationContext *ctx){
    if(!InterfaceMethodDeclarationContext_cls) InterfaceMethodDeclarationContext_cls = PyObject_GetAttrString(translator->parser_cls, "InterfaceMethodDeclarationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InterfaceMethodDeclarationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInterfaceMethodModifier(Java9_v2Parser::InterfaceMethodModifierContext *ctx){
    if(!InterfaceMethodModifierContext_cls) InterfaceMethodModifierContext_cls = PyObject_GetAttrString(translator->parser_cls, "InterfaceMethodModifierContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InterfaceMethodModifierContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAnnotationTypeDeclaration(Java9_v2Parser::AnnotationTypeDeclarationContext *ctx){
    if(!AnnotationTypeDeclarationContext_cls) AnnotationTypeDeclarationContext_cls = PyObject_GetAttrString(translator->parser_cls, "AnnotationTypeDeclarationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AnnotationTypeDeclarationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAnnotationTypeBody(Java9_v2Parser::AnnotationTypeBodyContext *ctx){
    if(!AnnotationTypeBodyContext_cls) AnnotationTypeBodyContext_cls = PyObject_GetAttrString(translator->parser_cls, "AnnotationTypeBodyContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AnnotationTypeBodyContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAnnotationTypeMemberDeclaration1(Java9_v2Parser::AnnotationTypeMemberDeclaration1Context *ctx){
    if(!AnnotationTypeMemberDeclaration1Context_cls) AnnotationTypeMemberDeclaration1Context_cls = PyObject_GetAttrString(translator->parser_cls, "AnnotationTypeMemberDeclaration1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AnnotationTypeMemberDeclaration1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAnnotationTypeMemberDeclaration2(Java9_v2Parser::AnnotationTypeMemberDeclaration2Context *ctx){
    if(!AnnotationTypeMemberDeclaration2Context_cls) AnnotationTypeMemberDeclaration2Context_cls = PyObject_GetAttrString(translator->parser_cls, "AnnotationTypeMemberDeclaration2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AnnotationTypeMemberDeclaration2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAnnotationTypeMemberDeclaration3(Java9_v2Parser::AnnotationTypeMemberDeclaration3Context *ctx){
    if(!AnnotationTypeMemberDeclaration3Context_cls) AnnotationTypeMemberDeclaration3Context_cls = PyObject_GetAttrString(translator->parser_cls, "AnnotationTypeMemberDeclaration3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AnnotationTypeMemberDeclaration3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAnnotationTypeMemberDeclaration4(Java9_v2Parser::AnnotationTypeMemberDeclaration4Context *ctx){
    if(!AnnotationTypeMemberDeclaration4Context_cls) AnnotationTypeMemberDeclaration4Context_cls = PyObject_GetAttrString(translator->parser_cls, "AnnotationTypeMemberDeclaration4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AnnotationTypeMemberDeclaration4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAnnotationTypeMemberDeclaration5(Java9_v2Parser::AnnotationTypeMemberDeclaration5Context *ctx){
    if(!AnnotationTypeMemberDeclaration5Context_cls) AnnotationTypeMemberDeclaration5Context_cls = PyObject_GetAttrString(translator->parser_cls, "AnnotationTypeMemberDeclaration5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AnnotationTypeMemberDeclaration5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAnnotationTypeElementDeclaration(Java9_v2Parser::AnnotationTypeElementDeclarationContext *ctx){
    if(!AnnotationTypeElementDeclarationContext_cls) AnnotationTypeElementDeclarationContext_cls = PyObject_GetAttrString(translator->parser_cls, "AnnotationTypeElementDeclarationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AnnotationTypeElementDeclarationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAnnotationTypeElementModifier(Java9_v2Parser::AnnotationTypeElementModifierContext *ctx){
    if(!AnnotationTypeElementModifierContext_cls) AnnotationTypeElementModifierContext_cls = PyObject_GetAttrString(translator->parser_cls, "AnnotationTypeElementModifierContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AnnotationTypeElementModifierContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitDefaultValue(Java9_v2Parser::DefaultValueContext *ctx){
    if(!DefaultValueContext_cls) DefaultValueContext_cls = PyObject_GetAttrString(translator->parser_cls, "DefaultValueContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, DefaultValueContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAnnotation3(Java9_v2Parser::Annotation3Context *ctx){
    if(!Annotation3Context_cls) Annotation3Context_cls = PyObject_GetAttrString(translator->parser_cls, "Annotation3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, Annotation3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAnnotation2(Java9_v2Parser::Annotation2Context *ctx){
    if(!Annotation2Context_cls) Annotation2Context_cls = PyObject_GetAttrString(translator->parser_cls, "Annotation2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, Annotation2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAnnotation1(Java9_v2Parser::Annotation1Context *ctx){
    if(!Annotation1Context_cls) Annotation1Context_cls = PyObject_GetAttrString(translator->parser_cls, "Annotation1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, Annotation1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitNormalAnnotation(Java9_v2Parser::NormalAnnotationContext *ctx){
    if(!NormalAnnotationContext_cls) NormalAnnotationContext_cls = PyObject_GetAttrString(translator->parser_cls, "NormalAnnotationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, NormalAnnotationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitElementValuePairList(Java9_v2Parser::ElementValuePairListContext *ctx){
    if(!ElementValuePairListContext_cls) ElementValuePairListContext_cls = PyObject_GetAttrString(translator->parser_cls, "ElementValuePairListContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ElementValuePairListContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitElementValuePair(Java9_v2Parser::ElementValuePairContext *ctx){
    if(!ElementValuePairContext_cls) ElementValuePairContext_cls = PyObject_GetAttrString(translator->parser_cls, "ElementValuePairContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ElementValuePairContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitElementValue2(Java9_v2Parser::ElementValue2Context *ctx){
    if(!ElementValue2Context_cls) ElementValue2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ElementValue2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ElementValue2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitElementValue1(Java9_v2Parser::ElementValue1Context *ctx){
    if(!ElementValue1Context_cls) ElementValue1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ElementValue1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ElementValue1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitElementValu3(Java9_v2Parser::ElementValu3Context *ctx){
    if(!ElementValu3Context_cls) ElementValu3Context_cls = PyObject_GetAttrString(translator->parser_cls, "ElementValu3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ElementValu3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitElementValueArrayInitializer(Java9_v2Parser::ElementValueArrayInitializerContext *ctx){
    if(!ElementValueArrayInitializerContext_cls) ElementValueArrayInitializerContext_cls = PyObject_GetAttrString(translator->parser_cls, "ElementValueArrayInitializerContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ElementValueArrayInitializerContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitElementValueList(Java9_v2Parser::ElementValueListContext *ctx){
    if(!ElementValueListContext_cls) ElementValueListContext_cls = PyObject_GetAttrString(translator->parser_cls, "ElementValueListContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ElementValueListContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMarkerAnnotation(Java9_v2Parser::MarkerAnnotationContext *ctx){
    if(!MarkerAnnotationContext_cls) MarkerAnnotationContext_cls = PyObject_GetAttrString(translator->parser_cls, "MarkerAnnotationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MarkerAnnotationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitSingleElementAnnotation(Java9_v2Parser::SingleElementAnnotationContext *ctx){
    if(!SingleElementAnnotationContext_cls) SingleElementAnnotationContext_cls = PyObject_GetAttrString(translator->parser_cls, "SingleElementAnnotationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, SingleElementAnnotationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitArrayInitializer(Java9_v2Parser::ArrayInitializerContext *ctx){
    if(!ArrayInitializerContext_cls) ArrayInitializerContext_cls = PyObject_GetAttrString(translator->parser_cls, "ArrayInitializerContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ArrayInitializerContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitVariableInitializerList(Java9_v2Parser::VariableInitializerListContext *ctx){
    if(!VariableInitializerListContext_cls) VariableInitializerListContext_cls = PyObject_GetAttrString(translator->parser_cls, "VariableInitializerListContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, VariableInitializerListContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitBlock(Java9_v2Parser::BlockContext *ctx){
    if(!BlockContext_cls) BlockContext_cls = PyObject_GetAttrString(translator->parser_cls, "BlockContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, BlockContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitBlockStatements(Java9_v2Parser::BlockStatementsContext *ctx){
    if(!BlockStatementsContext_cls) BlockStatementsContext_cls = PyObject_GetAttrString(translator->parser_cls, "BlockStatementsContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, BlockStatementsContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitBlockStatement1(Java9_v2Parser::BlockStatement1Context *ctx){
    if(!BlockStatement1Context_cls) BlockStatement1Context_cls = PyObject_GetAttrString(translator->parser_cls, "BlockStatement1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, BlockStatement1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitBlockStatement3(Java9_v2Parser::BlockStatement3Context *ctx){
    if(!BlockStatement3Context_cls) BlockStatement3Context_cls = PyObject_GetAttrString(translator->parser_cls, "BlockStatement3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, BlockStatement3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitBlockStatement2(Java9_v2Parser::BlockStatement2Context *ctx){
    if(!BlockStatement2Context_cls) BlockStatement2Context_cls = PyObject_GetAttrString(translator->parser_cls, "BlockStatement2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, BlockStatement2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitLocalVariableDeclarationStatement(Java9_v2Parser::LocalVariableDeclarationStatementContext *ctx){
    if(!LocalVariableDeclarationStatementContext_cls) LocalVariableDeclarationStatementContext_cls = PyObject_GetAttrString(translator->parser_cls, "LocalVariableDeclarationStatementContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, LocalVariableDeclarationStatementContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitLocalVariableDeclaration(Java9_v2Parser::LocalVariableDeclarationContext *ctx){
    if(!LocalVariableDeclarationContext_cls) LocalVariableDeclarationContext_cls = PyObject_GetAttrString(translator->parser_cls, "LocalVariableDeclarationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, LocalVariableDeclarationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatement5(Java9_v2Parser::Statement5Context *ctx){
    if(!Statement5Context_cls) Statement5Context_cls = PyObject_GetAttrString(translator->parser_cls, "Statement5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, Statement5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatement6(Java9_v2Parser::Statement6Context *ctx){
    if(!Statement6Context_cls) Statement6Context_cls = PyObject_GetAttrString(translator->parser_cls, "Statement6Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, Statement6Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatement3(Java9_v2Parser::Statement3Context *ctx){
    if(!Statement3Context_cls) Statement3Context_cls = PyObject_GetAttrString(translator->parser_cls, "Statement3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, Statement3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatement4(Java9_v2Parser::Statement4Context *ctx){
    if(!Statement4Context_cls) Statement4Context_cls = PyObject_GetAttrString(translator->parser_cls, "Statement4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, Statement4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatement1(Java9_v2Parser::Statement1Context *ctx){
    if(!Statement1Context_cls) Statement1Context_cls = PyObject_GetAttrString(translator->parser_cls, "Statement1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, Statement1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatement2(Java9_v2Parser::Statement2Context *ctx){
    if(!Statement2Context_cls) Statement2Context_cls = PyObject_GetAttrString(translator->parser_cls, "Statement2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, Statement2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementNoShortIf5(Java9_v2Parser::StatementNoShortIf5Context *ctx){
    if(!StatementNoShortIf5Context_cls) StatementNoShortIf5Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementNoShortIf5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementNoShortIf5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementNoShortIf2(Java9_v2Parser::StatementNoShortIf2Context *ctx){
    if(!StatementNoShortIf2Context_cls) StatementNoShortIf2Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementNoShortIf2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementNoShortIf2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementNoShortIf1(Java9_v2Parser::StatementNoShortIf1Context *ctx){
    if(!StatementNoShortIf1Context_cls) StatementNoShortIf1Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementNoShortIf1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementNoShortIf1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementNoShortIf4(Java9_v2Parser::StatementNoShortIf4Context *ctx){
    if(!StatementNoShortIf4Context_cls) StatementNoShortIf4Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementNoShortIf4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementNoShortIf4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementNoShortIf3(Java9_v2Parser::StatementNoShortIf3Context *ctx){
    if(!StatementNoShortIf3Context_cls) StatementNoShortIf3Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementNoShortIf3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementNoShortIf3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementWithoutTrailingSubstatement8(Java9_v2Parser::StatementWithoutTrailingSubstatement8Context *ctx){
    if(!StatementWithoutTrailingSubstatement8Context_cls) StatementWithoutTrailingSubstatement8Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementWithoutTrailingSubstatement8Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementWithoutTrailingSubstatement8Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementWithoutTrailingSubstatement9(Java9_v2Parser::StatementWithoutTrailingSubstatement9Context *ctx){
    if(!StatementWithoutTrailingSubstatement9Context_cls) StatementWithoutTrailingSubstatement9Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementWithoutTrailingSubstatement9Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementWithoutTrailingSubstatement9Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementWithoutTrailingSubstatement4(Java9_v2Parser::StatementWithoutTrailingSubstatement4Context *ctx){
    if(!StatementWithoutTrailingSubstatement4Context_cls) StatementWithoutTrailingSubstatement4Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementWithoutTrailingSubstatement4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementWithoutTrailingSubstatement4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementWithoutTrailingSubstatement5(Java9_v2Parser::StatementWithoutTrailingSubstatement5Context *ctx){
    if(!StatementWithoutTrailingSubstatement5Context_cls) StatementWithoutTrailingSubstatement5Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementWithoutTrailingSubstatement5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementWithoutTrailingSubstatement5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementWithoutTrailingSubstatement6(Java9_v2Parser::StatementWithoutTrailingSubstatement6Context *ctx){
    if(!StatementWithoutTrailingSubstatement6Context_cls) StatementWithoutTrailingSubstatement6Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementWithoutTrailingSubstatement6Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementWithoutTrailingSubstatement6Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementWithoutTrailingSubstatement7(Java9_v2Parser::StatementWithoutTrailingSubstatement7Context *ctx){
    if(!StatementWithoutTrailingSubstatement7Context_cls) StatementWithoutTrailingSubstatement7Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementWithoutTrailingSubstatement7Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementWithoutTrailingSubstatement7Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementWithoutTrailingSubstatement1(Java9_v2Parser::StatementWithoutTrailingSubstatement1Context *ctx){
    if(!StatementWithoutTrailingSubstatement1Context_cls) StatementWithoutTrailingSubstatement1Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementWithoutTrailingSubstatement1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementWithoutTrailingSubstatement1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementWithoutTrailingSubstatement10(Java9_v2Parser::StatementWithoutTrailingSubstatement10Context *ctx){
    if(!StatementWithoutTrailingSubstatement10Context_cls) StatementWithoutTrailingSubstatement10Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementWithoutTrailingSubstatement10Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementWithoutTrailingSubstatement10Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementWithoutTrailingSubstatement2(Java9_v2Parser::StatementWithoutTrailingSubstatement2Context *ctx){
    if(!StatementWithoutTrailingSubstatement2Context_cls) StatementWithoutTrailingSubstatement2Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementWithoutTrailingSubstatement2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementWithoutTrailingSubstatement2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementWithoutTrailingSubstatement3(Java9_v2Parser::StatementWithoutTrailingSubstatement3Context *ctx){
    if(!StatementWithoutTrailingSubstatement3Context_cls) StatementWithoutTrailingSubstatement3Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementWithoutTrailingSubstatement3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementWithoutTrailingSubstatement3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementWithoutTrailingSubstatement11(Java9_v2Parser::StatementWithoutTrailingSubstatement11Context *ctx){
    if(!StatementWithoutTrailingSubstatement11Context_cls) StatementWithoutTrailingSubstatement11Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementWithoutTrailingSubstatement11Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementWithoutTrailingSubstatement11Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementWithoutTrailingSubstatement12(Java9_v2Parser::StatementWithoutTrailingSubstatement12Context *ctx){
    if(!StatementWithoutTrailingSubstatement12Context_cls) StatementWithoutTrailingSubstatement12Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementWithoutTrailingSubstatement12Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementWithoutTrailingSubstatement12Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitEmptyStatement(Java9_v2Parser::EmptyStatementContext *ctx){
    if(!EmptyStatementContext_cls) EmptyStatementContext_cls = PyObject_GetAttrString(translator->parser_cls, "EmptyStatementContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, EmptyStatementContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitLabeledStatement(Java9_v2Parser::LabeledStatementContext *ctx){
    if(!LabeledStatementContext_cls) LabeledStatementContext_cls = PyObject_GetAttrString(translator->parser_cls, "LabeledStatementContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, LabeledStatementContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitLabeledStatementNoShortIf(Java9_v2Parser::LabeledStatementNoShortIfContext *ctx){
    if(!LabeledStatementNoShortIfContext_cls) LabeledStatementNoShortIfContext_cls = PyObject_GetAttrString(translator->parser_cls, "LabeledStatementNoShortIfContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, LabeledStatementNoShortIfContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitExpressionStatement(Java9_v2Parser::ExpressionStatementContext *ctx){
    if(!ExpressionStatementContext_cls) ExpressionStatementContext_cls = PyObject_GetAttrString(translator->parser_cls, "ExpressionStatementContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ExpressionStatementContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementExpression3(Java9_v2Parser::StatementExpression3Context *ctx){
    if(!StatementExpression3Context_cls) StatementExpression3Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementExpression3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementExpression3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementExpression4(Java9_v2Parser::StatementExpression4Context *ctx){
    if(!StatementExpression4Context_cls) StatementExpression4Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementExpression4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementExpression4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementExpression5(Java9_v2Parser::StatementExpression5Context *ctx){
    if(!StatementExpression5Context_cls) StatementExpression5Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementExpression5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementExpression5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementExpression6(Java9_v2Parser::StatementExpression6Context *ctx){
    if(!StatementExpression6Context_cls) StatementExpression6Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementExpression6Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementExpression6Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementExpression1(Java9_v2Parser::StatementExpression1Context *ctx){
    if(!StatementExpression1Context_cls) StatementExpression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementExpression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementExpression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementExpression2(Java9_v2Parser::StatementExpression2Context *ctx){
    if(!StatementExpression2Context_cls) StatementExpression2Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementExpression2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementExpression2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementExpression7(Java9_v2Parser::StatementExpression7Context *ctx){
    if(!StatementExpression7Context_cls) StatementExpression7Context_cls = PyObject_GetAttrString(translator->parser_cls, "StatementExpression7Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementExpression7Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitIfThenStatement(Java9_v2Parser::IfThenStatementContext *ctx){
    if(!IfThenStatementContext_cls) IfThenStatementContext_cls = PyObject_GetAttrString(translator->parser_cls, "IfThenStatementContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, IfThenStatementContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitIfThenElseStatement(Java9_v2Parser::IfThenElseStatementContext *ctx){
    if(!IfThenElseStatementContext_cls) IfThenElseStatementContext_cls = PyObject_GetAttrString(translator->parser_cls, "IfThenElseStatementContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, IfThenElseStatementContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitIfThenElseStatementNoShortIf(Java9_v2Parser::IfThenElseStatementNoShortIfContext *ctx){
    if(!IfThenElseStatementNoShortIfContext_cls) IfThenElseStatementNoShortIfContext_cls = PyObject_GetAttrString(translator->parser_cls, "IfThenElseStatementNoShortIfContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, IfThenElseStatementNoShortIfContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAssertStatement2(Java9_v2Parser::AssertStatement2Context *ctx){
    if(!AssertStatement2Context_cls) AssertStatement2Context_cls = PyObject_GetAttrString(translator->parser_cls, "AssertStatement2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AssertStatement2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAssertStatement1(Java9_v2Parser::AssertStatement1Context *ctx){
    if(!AssertStatement1Context_cls) AssertStatement1Context_cls = PyObject_GetAttrString(translator->parser_cls, "AssertStatement1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AssertStatement1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitSwitchStatement(Java9_v2Parser::SwitchStatementContext *ctx){
    if(!SwitchStatementContext_cls) SwitchStatementContext_cls = PyObject_GetAttrString(translator->parser_cls, "SwitchStatementContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, SwitchStatementContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitSwitchBlock(Java9_v2Parser::SwitchBlockContext *ctx){
    if(!SwitchBlockContext_cls) SwitchBlockContext_cls = PyObject_GetAttrString(translator->parser_cls, "SwitchBlockContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, SwitchBlockContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitSwitchBlockStatementGroup(Java9_v2Parser::SwitchBlockStatementGroupContext *ctx){
    if(!SwitchBlockStatementGroupContext_cls) SwitchBlockStatementGroupContext_cls = PyObject_GetAttrString(translator->parser_cls, "SwitchBlockStatementGroupContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, SwitchBlockStatementGroupContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitSwitchLabels(Java9_v2Parser::SwitchLabelsContext *ctx){
    if(!SwitchLabelsContext_cls) SwitchLabelsContext_cls = PyObject_GetAttrString(translator->parser_cls, "SwitchLabelsContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, SwitchLabelsContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitSwitchLabel3(Java9_v2Parser::SwitchLabel3Context *ctx){
    if(!SwitchLabel3Context_cls) SwitchLabel3Context_cls = PyObject_GetAttrString(translator->parser_cls, "SwitchLabel3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, SwitchLabel3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitSwitchLabel2(Java9_v2Parser::SwitchLabel2Context *ctx){
    if(!SwitchLabel2Context_cls) SwitchLabel2Context_cls = PyObject_GetAttrString(translator->parser_cls, "SwitchLabel2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, SwitchLabel2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitSwitchLabel1(Java9_v2Parser::SwitchLabel1Context *ctx){
    if(!SwitchLabel1Context_cls) SwitchLabel1Context_cls = PyObject_GetAttrString(translator->parser_cls, "SwitchLabel1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, SwitchLabel1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitEnumConstantName(Java9_v2Parser::EnumConstantNameContext *ctx){
    if(!EnumConstantNameContext_cls) EnumConstantNameContext_cls = PyObject_GetAttrString(translator->parser_cls, "EnumConstantNameContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, EnumConstantNameContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitWhileStatement(Java9_v2Parser::WhileStatementContext *ctx){
    if(!WhileStatementContext_cls) WhileStatementContext_cls = PyObject_GetAttrString(translator->parser_cls, "WhileStatementContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, WhileStatementContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitWhileStatementNoShortIf(Java9_v2Parser::WhileStatementNoShortIfContext *ctx){
    if(!WhileStatementNoShortIfContext_cls) WhileStatementNoShortIfContext_cls = PyObject_GetAttrString(translator->parser_cls, "WhileStatementNoShortIfContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, WhileStatementNoShortIfContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitDoStatement(Java9_v2Parser::DoStatementContext *ctx){
    if(!DoStatementContext_cls) DoStatementContext_cls = PyObject_GetAttrString(translator->parser_cls, "DoStatementContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, DoStatementContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitForStatement1(Java9_v2Parser::ForStatement1Context *ctx){
    if(!ForStatement1Context_cls) ForStatement1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ForStatement1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ForStatement1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitForStatement2(Java9_v2Parser::ForStatement2Context *ctx){
    if(!ForStatement2Context_cls) ForStatement2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ForStatement2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ForStatement2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitForStatementNoShortIf3(Java9_v2Parser::ForStatementNoShortIf3Context *ctx){
    if(!ForStatementNoShortIf3Context_cls) ForStatementNoShortIf3Context_cls = PyObject_GetAttrString(translator->parser_cls, "ForStatementNoShortIf3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ForStatementNoShortIf3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitForStatementNoShortIf4(Java9_v2Parser::ForStatementNoShortIf4Context *ctx){
    if(!ForStatementNoShortIf4Context_cls) ForStatementNoShortIf4Context_cls = PyObject_GetAttrString(translator->parser_cls, "ForStatementNoShortIf4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ForStatementNoShortIf4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitBasicForStatement(Java9_v2Parser::BasicForStatementContext *ctx){
    if(!BasicForStatementContext_cls) BasicForStatementContext_cls = PyObject_GetAttrString(translator->parser_cls, "BasicForStatementContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, BasicForStatementContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitBasicForStatementNoShortIf(Java9_v2Parser::BasicForStatementNoShortIfContext *ctx){
    if(!BasicForStatementNoShortIfContext_cls) BasicForStatementNoShortIfContext_cls = PyObject_GetAttrString(translator->parser_cls, "BasicForStatementNoShortIfContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, BasicForStatementNoShortIfContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitForInit1(Java9_v2Parser::ForInit1Context *ctx){
    if(!ForInit1Context_cls) ForInit1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ForInit1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ForInit1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitForInit2(Java9_v2Parser::ForInit2Context *ctx){
    if(!ForInit2Context_cls) ForInit2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ForInit2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ForInit2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitForUpdate(Java9_v2Parser::ForUpdateContext *ctx){
    if(!ForUpdateContext_cls) ForUpdateContext_cls = PyObject_GetAttrString(translator->parser_cls, "ForUpdateContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ForUpdateContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitStatementExpressionList(Java9_v2Parser::StatementExpressionListContext *ctx){
    if(!StatementExpressionListContext_cls) StatementExpressionListContext_cls = PyObject_GetAttrString(translator->parser_cls, "StatementExpressionListContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, StatementExpressionListContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitEnhancedForStatement(Java9_v2Parser::EnhancedForStatementContext *ctx){
    if(!EnhancedForStatementContext_cls) EnhancedForStatementContext_cls = PyObject_GetAttrString(translator->parser_cls, "EnhancedForStatementContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, EnhancedForStatementContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitEnhancedForStatementNoShortIf(Java9_v2Parser::EnhancedForStatementNoShortIfContext *ctx){
    if(!EnhancedForStatementNoShortIfContext_cls) EnhancedForStatementNoShortIfContext_cls = PyObject_GetAttrString(translator->parser_cls, "EnhancedForStatementNoShortIfContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, EnhancedForStatementNoShortIfContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitBreakStatement(Java9_v2Parser::BreakStatementContext *ctx){
    if(!BreakStatementContext_cls) BreakStatementContext_cls = PyObject_GetAttrString(translator->parser_cls, "BreakStatementContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, BreakStatementContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitContinueStatement(Java9_v2Parser::ContinueStatementContext *ctx){
    if(!ContinueStatementContext_cls) ContinueStatementContext_cls = PyObject_GetAttrString(translator->parser_cls, "ContinueStatementContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ContinueStatementContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitReturnStatement(Java9_v2Parser::ReturnStatementContext *ctx){
    if(!ReturnStatementContext_cls) ReturnStatementContext_cls = PyObject_GetAttrString(translator->parser_cls, "ReturnStatementContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ReturnStatementContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitThrowStatement(Java9_v2Parser::ThrowStatementContext *ctx){
    if(!ThrowStatementContext_cls) ThrowStatementContext_cls = PyObject_GetAttrString(translator->parser_cls, "ThrowStatementContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ThrowStatementContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitSynchronizedStatement(Java9_v2Parser::SynchronizedStatementContext *ctx){
    if(!SynchronizedStatementContext_cls) SynchronizedStatementContext_cls = PyObject_GetAttrString(translator->parser_cls, "SynchronizedStatementContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, SynchronizedStatementContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTryStatement2(Java9_v2Parser::TryStatement2Context *ctx){
    if(!TryStatement2Context_cls) TryStatement2Context_cls = PyObject_GetAttrString(translator->parser_cls, "TryStatement2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TryStatement2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTryStatement3(Java9_v2Parser::TryStatement3Context *ctx){
    if(!TryStatement3Context_cls) TryStatement3Context_cls = PyObject_GetAttrString(translator->parser_cls, "TryStatement3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TryStatement3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTryStatement1(Java9_v2Parser::TryStatement1Context *ctx){
    if(!TryStatement1Context_cls) TryStatement1Context_cls = PyObject_GetAttrString(translator->parser_cls, "TryStatement1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TryStatement1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitCatches(Java9_v2Parser::CatchesContext *ctx){
    if(!CatchesContext_cls) CatchesContext_cls = PyObject_GetAttrString(translator->parser_cls, "CatchesContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, CatchesContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitCatchClause(Java9_v2Parser::CatchClauseContext *ctx){
    if(!CatchClauseContext_cls) CatchClauseContext_cls = PyObject_GetAttrString(translator->parser_cls, "CatchClauseContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, CatchClauseContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitCatchFormalParameter(Java9_v2Parser::CatchFormalParameterContext *ctx){
    if(!CatchFormalParameterContext_cls) CatchFormalParameterContext_cls = PyObject_GetAttrString(translator->parser_cls, "CatchFormalParameterContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, CatchFormalParameterContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitCatchType(Java9_v2Parser::CatchTypeContext *ctx){
    if(!CatchTypeContext_cls) CatchTypeContext_cls = PyObject_GetAttrString(translator->parser_cls, "CatchTypeContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, CatchTypeContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitFinally_(Java9_v2Parser::Finally_Context *ctx){
    if(!Finally_Context_cls) Finally_Context_cls = PyObject_GetAttrString(translator->parser_cls, "Finally_Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, Finally_Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTryWithResourcesStatement(Java9_v2Parser::TryWithResourcesStatementContext *ctx){
    if(!TryWithResourcesStatementContext_cls) TryWithResourcesStatementContext_cls = PyObject_GetAttrString(translator->parser_cls, "TryWithResourcesStatementContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TryWithResourcesStatementContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitResourceSpecification(Java9_v2Parser::ResourceSpecificationContext *ctx){
    if(!ResourceSpecificationContext_cls) ResourceSpecificationContext_cls = PyObject_GetAttrString(translator->parser_cls, "ResourceSpecificationContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ResourceSpecificationContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitResourceList(Java9_v2Parser::ResourceListContext *ctx){
    if(!ResourceListContext_cls) ResourceListContext_cls = PyObject_GetAttrString(translator->parser_cls, "ResourceListContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ResourceListContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitResource2(Java9_v2Parser::Resource2Context *ctx){
    if(!Resource2Context_cls) Resource2Context_cls = PyObject_GetAttrString(translator->parser_cls, "Resource2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, Resource2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitResource1(Java9_v2Parser::Resource1Context *ctx){
    if(!Resource1Context_cls) Resource1Context_cls = PyObject_GetAttrString(translator->parser_cls, "Resource1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, Resource1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitVariableAccess1(Java9_v2Parser::VariableAccess1Context *ctx){
    if(!VariableAccess1Context_cls) VariableAccess1Context_cls = PyObject_GetAttrString(translator->parser_cls, "VariableAccess1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, VariableAccess1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitVariableAccess2(Java9_v2Parser::VariableAccess2Context *ctx){
    if(!VariableAccess2Context_cls) VariableAccess2Context_cls = PyObject_GetAttrString(translator->parser_cls, "VariableAccess2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, VariableAccess2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimary(Java9_v2Parser::PrimaryContext *ctx){
    if(!PrimaryContext_cls) PrimaryContext_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray1(Java9_v2Parser::PrimaryNoNewArray1Context *ctx){
    if(!PrimaryNoNewArray1Context_cls) PrimaryNoNewArray1Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray2(Java9_v2Parser::PrimaryNoNewArray2Context *ctx){
    if(!PrimaryNoNewArray2Context_cls) PrimaryNoNewArray2Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray3(Java9_v2Parser::PrimaryNoNewArray3Context *ctx){
    if(!PrimaryNoNewArray3Context_cls) PrimaryNoNewArray3Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray8(Java9_v2Parser::PrimaryNoNewArray8Context *ctx){
    if(!PrimaryNoNewArray8Context_cls) PrimaryNoNewArray8Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray8Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray8Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray9(Java9_v2Parser::PrimaryNoNewArray9Context *ctx){
    if(!PrimaryNoNewArray9Context_cls) PrimaryNoNewArray9Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray9Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray9Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray4(Java9_v2Parser::PrimaryNoNewArray4Context *ctx){
    if(!PrimaryNoNewArray4Context_cls) PrimaryNoNewArray4Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray5(Java9_v2Parser::PrimaryNoNewArray5Context *ctx){
    if(!PrimaryNoNewArray5Context_cls) PrimaryNoNewArray5Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray6(Java9_v2Parser::PrimaryNoNewArray6Context *ctx){
    if(!PrimaryNoNewArray6Context_cls) PrimaryNoNewArray6Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray6Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray6Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray10(Java9_v2Parser::PrimaryNoNewArray10Context *ctx){
    if(!PrimaryNoNewArray10Context_cls) PrimaryNoNewArray10Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray10Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray10Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray7(Java9_v2Parser::PrimaryNoNewArray7Context *ctx){
    if(!PrimaryNoNewArray7Context_cls) PrimaryNoNewArray7Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray7Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray7Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lf_arrayAccess(Java9_v2Parser::PrimaryNoNewArray_lf_arrayAccessContext *ctx){
    if(!PrimaryNoNewArray_lf_arrayAccessContext_cls) PrimaryNoNewArray_lf_arrayAccessContext_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lf_arrayAccessContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lf_arrayAccessContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_arrayAccess6(Java9_v2Parser::PrimaryNoNewArray_lfno_arrayAccess6Context *ctx){
    if(!PrimaryNoNewArray_lfno_arrayAccess6Context_cls) PrimaryNoNewArray_lfno_arrayAccess6Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_arrayAccess6Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_arrayAccess6Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_arrayAccess10(Java9_v2Parser::PrimaryNoNewArray_lfno_arrayAccess10Context *ctx){
    if(!PrimaryNoNewArray_lfno_arrayAccess10Context_cls) PrimaryNoNewArray_lfno_arrayAccess10Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_arrayAccess10Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_arrayAccess10Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_arrayAccess7(Java9_v2Parser::PrimaryNoNewArray_lfno_arrayAccess7Context *ctx){
    if(!PrimaryNoNewArray_lfno_arrayAccess7Context_cls) PrimaryNoNewArray_lfno_arrayAccess7Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_arrayAccess7Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_arrayAccess7Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_arrayAccess4(Java9_v2Parser::PrimaryNoNewArray_lfno_arrayAccess4Context *ctx){
    if(!PrimaryNoNewArray_lfno_arrayAccess4Context_cls) PrimaryNoNewArray_lfno_arrayAccess4Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_arrayAccess4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_arrayAccess4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_arrayAccess5(Java9_v2Parser::PrimaryNoNewArray_lfno_arrayAccess5Context *ctx){
    if(!PrimaryNoNewArray_lfno_arrayAccess5Context_cls) PrimaryNoNewArray_lfno_arrayAccess5Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_arrayAccess5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_arrayAccess5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_arrayAccess8(Java9_v2Parser::PrimaryNoNewArray_lfno_arrayAccess8Context *ctx){
    if(!PrimaryNoNewArray_lfno_arrayAccess8Context_cls) PrimaryNoNewArray_lfno_arrayAccess8Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_arrayAccess8Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_arrayAccess8Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_arrayAccess9(Java9_v2Parser::PrimaryNoNewArray_lfno_arrayAccess9Context *ctx){
    if(!PrimaryNoNewArray_lfno_arrayAccess9Context_cls) PrimaryNoNewArray_lfno_arrayAccess9Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_arrayAccess9Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_arrayAccess9Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_arrayAccess2(Java9_v2Parser::PrimaryNoNewArray_lfno_arrayAccess2Context *ctx){
    if(!PrimaryNoNewArray_lfno_arrayAccess2Context_cls) PrimaryNoNewArray_lfno_arrayAccess2Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_arrayAccess2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_arrayAccess2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_arrayAccess3(Java9_v2Parser::PrimaryNoNewArray_lfno_arrayAccess3Context *ctx){
    if(!PrimaryNoNewArray_lfno_arrayAccess3Context_cls) PrimaryNoNewArray_lfno_arrayAccess3Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_arrayAccess3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_arrayAccess3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_arrayAccess1(Java9_v2Parser::PrimaryNoNewArray_lfno_arrayAccess1Context *ctx){
    if(!PrimaryNoNewArray_lfno_arrayAccess1Context_cls) PrimaryNoNewArray_lfno_arrayAccess1Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_arrayAccess1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_arrayAccess1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lf_primary2(Java9_v2Parser::PrimaryNoNewArray_lf_primary2Context *ctx){
    if(!PrimaryNoNewArray_lf_primary2Context_cls) PrimaryNoNewArray_lf_primary2Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lf_primary2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lf_primary2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lf_primary3(Java9_v2Parser::PrimaryNoNewArray_lf_primary3Context *ctx){
    if(!PrimaryNoNewArray_lf_primary3Context_cls) PrimaryNoNewArray_lf_primary3Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lf_primary3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lf_primary3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lf_primary1(Java9_v2Parser::PrimaryNoNewArray_lf_primary1Context *ctx){
    if(!PrimaryNoNewArray_lf_primary1Context_cls) PrimaryNoNewArray_lf_primary1Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lf_primary1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lf_primary1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lf_primary4(Java9_v2Parser::PrimaryNoNewArray_lf_primary4Context *ctx){
    if(!PrimaryNoNewArray_lf_primary4Context_cls) PrimaryNoNewArray_lf_primary4Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lf_primary4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lf_primary4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lf_primary5(Java9_v2Parser::PrimaryNoNewArray_lf_primary5Context *ctx){
    if(!PrimaryNoNewArray_lf_primary5Context_cls) PrimaryNoNewArray_lf_primary5Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lf_primary5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lf_primary5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lf_primary_lf_arrayAccess_lf_primary(Java9_v2Parser::PrimaryNoNewArray_lf_primary_lf_arrayAccess_lf_primaryContext *ctx){
    if(!PrimaryNoNewArray_lf_primary_lf_arrayAccess_lf_primaryContext_cls) PrimaryNoNewArray_lf_primary_lf_arrayAccess_lf_primaryContext_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lf_primary_lf_arrayAccess_lf_primaryContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lf_primary_lf_arrayAccess_lf_primaryContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary1(Java9_v2Parser::PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary1Context *ctx){
    if(!PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary1Context_cls) PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary1Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary3(Java9_v2Parser::PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary3Context *ctx){
    if(!PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary3Context_cls) PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary3Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary2(Java9_v2Parser::PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary2Context *ctx){
    if(!PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary2Context_cls) PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary2Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary4(Java9_v2Parser::PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary4Context *ctx){
    if(!PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary4Context_cls) PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary4Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary9(Java9_v2Parser::PrimaryNoNewArray_lfno_primary9Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary9Context_cls) PrimaryNoNewArray_lfno_primary9Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary9Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary9Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary5(Java9_v2Parser::PrimaryNoNewArray_lfno_primary5Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary5Context_cls) PrimaryNoNewArray_lfno_primary5Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary6(Java9_v2Parser::PrimaryNoNewArray_lfno_primary6Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary6Context_cls) PrimaryNoNewArray_lfno_primary6Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary6Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary6Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary7(Java9_v2Parser::PrimaryNoNewArray_lfno_primary7Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary7Context_cls) PrimaryNoNewArray_lfno_primary7Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary7Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary7Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary8(Java9_v2Parser::PrimaryNoNewArray_lfno_primary8Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary8Context_cls) PrimaryNoNewArray_lfno_primary8Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary8Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary8Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary1(Java9_v2Parser::PrimaryNoNewArray_lfno_primary1Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary1Context_cls) PrimaryNoNewArray_lfno_primary1Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary2(Java9_v2Parser::PrimaryNoNewArray_lfno_primary2Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary2Context_cls) PrimaryNoNewArray_lfno_primary2Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary12(Java9_v2Parser::PrimaryNoNewArray_lfno_primary12Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary12Context_cls) PrimaryNoNewArray_lfno_primary12Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary12Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary12Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary3(Java9_v2Parser::PrimaryNoNewArray_lfno_primary3Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary3Context_cls) PrimaryNoNewArray_lfno_primary3Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary11(Java9_v2Parser::PrimaryNoNewArray_lfno_primary11Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary11Context_cls) PrimaryNoNewArray_lfno_primary11Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary11Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary11Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary4(Java9_v2Parser::PrimaryNoNewArray_lfno_primary4Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary4Context_cls) PrimaryNoNewArray_lfno_primary4Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary10(Java9_v2Parser::PrimaryNoNewArray_lfno_primary10Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary10Context_cls) PrimaryNoNewArray_lfno_primary10Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary10Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary10Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary_lf_arrayAccess_lfno_primary(Java9_v2Parser::PrimaryNoNewArray_lfno_primary_lf_arrayAccess_lfno_primaryContext *ctx){
    if(!PrimaryNoNewArray_lfno_primary_lf_arrayAccess_lfno_primaryContext_cls) PrimaryNoNewArray_lfno_primary_lf_arrayAccess_lfno_primaryContext_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary_lf_arrayAccess_lfno_primaryContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary_lf_arrayAccess_lfno_primaryContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary3(Java9_v2Parser::PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary3Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary3Context_cls) PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary3Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary11(Java9_v2Parser::PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary11Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary11Context_cls) PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary11Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary11Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary11Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary2(Java9_v2Parser::PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary2Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary2Context_cls) PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary2Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary5(Java9_v2Parser::PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary5Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary5Context_cls) PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary5Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary4(Java9_v2Parser::PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary4Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary4Context_cls) PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary4Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary10(Java9_v2Parser::PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary10Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary10Context_cls) PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary10Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary10Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary10Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary1(Java9_v2Parser::PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary1Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary1Context_cls) PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary1Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary7(Java9_v2Parser::PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary7Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary7Context_cls) PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary7Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary7Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary7Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary6(Java9_v2Parser::PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary6Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary6Context_cls) PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary6Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary6Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary6Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary9(Java9_v2Parser::PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary9Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary9Context_cls) PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary9Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary9Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary9Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary8(Java9_v2Parser::PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary8Context *ctx){
    if(!PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary8Context_cls) PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary8Context_cls = PyObject_GetAttrString(translator->parser_cls, "PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary8Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary8Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassLiteral2(Java9_v2Parser::ClassLiteral2Context *ctx){
    if(!ClassLiteral2Context_cls) ClassLiteral2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassLiteral2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassLiteral2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassLiteral1(Java9_v2Parser::ClassLiteral1Context *ctx){
    if(!ClassLiteral1Context_cls) ClassLiteral1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassLiteral1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassLiteral1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassInstanceCreationExpression1(Java9_v2Parser::ClassInstanceCreationExpression1Context *ctx){
    if(!ClassInstanceCreationExpression1Context_cls) ClassInstanceCreationExpression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassInstanceCreationExpression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassInstanceCreationExpression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassInstanceCreationExpression3(Java9_v2Parser::ClassInstanceCreationExpression3Context *ctx){
    if(!ClassInstanceCreationExpression3Context_cls) ClassInstanceCreationExpression3Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassInstanceCreationExpression3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassInstanceCreationExpression3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassInstanceCreationExpression2(Java9_v2Parser::ClassInstanceCreationExpression2Context *ctx){
    if(!ClassInstanceCreationExpression2Context_cls) ClassInstanceCreationExpression2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassInstanceCreationExpression2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassInstanceCreationExpression2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassInstanceCreationExpression_lf_primary(Java9_v2Parser::ClassInstanceCreationExpression_lf_primaryContext *ctx){
    if(!ClassInstanceCreationExpression_lf_primaryContext_cls) ClassInstanceCreationExpression_lf_primaryContext_cls = PyObject_GetAttrString(translator->parser_cls, "ClassInstanceCreationExpression_lf_primaryContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassInstanceCreationExpression_lf_primaryContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassInstanceCreationExpression_lfno_primary1(Java9_v2Parser::ClassInstanceCreationExpression_lfno_primary1Context *ctx){
    if(!ClassInstanceCreationExpression_lfno_primary1Context_cls) ClassInstanceCreationExpression_lfno_primary1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassInstanceCreationExpression_lfno_primary1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassInstanceCreationExpression_lfno_primary1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitClassInstanceCreationExpression_lfno_primary2(Java9_v2Parser::ClassInstanceCreationExpression_lfno_primary2Context *ctx){
    if(!ClassInstanceCreationExpression_lfno_primary2Context_cls) ClassInstanceCreationExpression_lfno_primary2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ClassInstanceCreationExpression_lfno_primary2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ClassInstanceCreationExpression_lfno_primary2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeArgumentsOrDiamond1(Java9_v2Parser::TypeArgumentsOrDiamond1Context *ctx){
    if(!TypeArgumentsOrDiamond1Context_cls) TypeArgumentsOrDiamond1Context_cls = PyObject_GetAttrString(translator->parser_cls, "TypeArgumentsOrDiamond1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeArgumentsOrDiamond1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitTypeArgumentsOrDiamond2(Java9_v2Parser::TypeArgumentsOrDiamond2Context *ctx){
    if(!TypeArgumentsOrDiamond2Context_cls) TypeArgumentsOrDiamond2Context_cls = PyObject_GetAttrString(translator->parser_cls, "TypeArgumentsOrDiamond2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, TypeArgumentsOrDiamond2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitFieldAccess1(Java9_v2Parser::FieldAccess1Context *ctx){
    if(!FieldAccess1Context_cls) FieldAccess1Context_cls = PyObject_GetAttrString(translator->parser_cls, "FieldAccess1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, FieldAccess1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitFieldAccess2(Java9_v2Parser::FieldAccess2Context *ctx){
    if(!FieldAccess2Context_cls) FieldAccess2Context_cls = PyObject_GetAttrString(translator->parser_cls, "FieldAccess2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, FieldAccess2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitFieldAccess3(Java9_v2Parser::FieldAccess3Context *ctx){
    if(!FieldAccess3Context_cls) FieldAccess3Context_cls = PyObject_GetAttrString(translator->parser_cls, "FieldAccess3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, FieldAccess3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitFieldAccess_lf_primary(Java9_v2Parser::FieldAccess_lf_primaryContext *ctx){
    if(!FieldAccess_lf_primaryContext_cls) FieldAccess_lf_primaryContext_cls = PyObject_GetAttrString(translator->parser_cls, "FieldAccess_lf_primaryContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, FieldAccess_lf_primaryContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitFieldAccess_lfno_primary2(Java9_v2Parser::FieldAccess_lfno_primary2Context *ctx){
    if(!FieldAccess_lfno_primary2Context_cls) FieldAccess_lfno_primary2Context_cls = PyObject_GetAttrString(translator->parser_cls, "FieldAccess_lfno_primary2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, FieldAccess_lfno_primary2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitFieldAccess_lfno_primary1(Java9_v2Parser::FieldAccess_lfno_primary1Context *ctx){
    if(!FieldAccess_lfno_primary1Context_cls) FieldAccess_lfno_primary1Context_cls = PyObject_GetAttrString(translator->parser_cls, "FieldAccess_lfno_primary1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, FieldAccess_lfno_primary1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitArrayAccess(Java9_v2Parser::ArrayAccessContext *ctx){
    if(!ArrayAccessContext_cls) ArrayAccessContext_cls = PyObject_GetAttrString(translator->parser_cls, "ArrayAccessContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ArrayAccessContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitArrayAccess_lf_primary(Java9_v2Parser::ArrayAccess_lf_primaryContext *ctx){
    if(!ArrayAccess_lf_primaryContext_cls) ArrayAccess_lf_primaryContext_cls = PyObject_GetAttrString(translator->parser_cls, "ArrayAccess_lf_primaryContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ArrayAccess_lf_primaryContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitArrayAccess_lfno_primary(Java9_v2Parser::ArrayAccess_lfno_primaryContext *ctx){
    if(!ArrayAccess_lfno_primaryContext_cls) ArrayAccess_lfno_primaryContext_cls = PyObject_GetAttrString(translator->parser_cls, "ArrayAccess_lfno_primaryContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ArrayAccess_lfno_primaryContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodInvocation1(Java9_v2Parser::MethodInvocation1Context *ctx){
    if(!MethodInvocation1Context_cls) MethodInvocation1Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodInvocation1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodInvocation1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodInvocation2(Java9_v2Parser::MethodInvocation2Context *ctx){
    if(!MethodInvocation2Context_cls) MethodInvocation2Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodInvocation2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodInvocation2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodInvocation3(Java9_v2Parser::MethodInvocation3Context *ctx){
    if(!MethodInvocation3Context_cls) MethodInvocation3Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodInvocation3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodInvocation3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodInvocation4(Java9_v2Parser::MethodInvocation4Context *ctx){
    if(!MethodInvocation4Context_cls) MethodInvocation4Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodInvocation4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodInvocation4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodInvocation5(Java9_v2Parser::MethodInvocation5Context *ctx){
    if(!MethodInvocation5Context_cls) MethodInvocation5Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodInvocation5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodInvocation5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodInvocation6(Java9_v2Parser::MethodInvocation6Context *ctx){
    if(!MethodInvocation6Context_cls) MethodInvocation6Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodInvocation6Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodInvocation6Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodInvocation_lf_primary(Java9_v2Parser::MethodInvocation_lf_primaryContext *ctx){
    if(!MethodInvocation_lf_primaryContext_cls) MethodInvocation_lf_primaryContext_cls = PyObject_GetAttrString(translator->parser_cls, "MethodInvocation_lf_primaryContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodInvocation_lf_primaryContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodInvocation_lfno_primary3(Java9_v2Parser::MethodInvocation_lfno_primary3Context *ctx){
    if(!MethodInvocation_lfno_primary3Context_cls) MethodInvocation_lfno_primary3Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodInvocation_lfno_primary3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodInvocation_lfno_primary3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodInvocation_lfno_primary2(Java9_v2Parser::MethodInvocation_lfno_primary2Context *ctx){
    if(!MethodInvocation_lfno_primary2Context_cls) MethodInvocation_lfno_primary2Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodInvocation_lfno_primary2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodInvocation_lfno_primary2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodInvocation_lfno_primary1(Java9_v2Parser::MethodInvocation_lfno_primary1Context *ctx){
    if(!MethodInvocation_lfno_primary1Context_cls) MethodInvocation_lfno_primary1Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodInvocation_lfno_primary1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodInvocation_lfno_primary1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodInvocation_lfno_primary5(Java9_v2Parser::MethodInvocation_lfno_primary5Context *ctx){
    if(!MethodInvocation_lfno_primary5Context_cls) MethodInvocation_lfno_primary5Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodInvocation_lfno_primary5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodInvocation_lfno_primary5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodInvocation_lfno_primary4(Java9_v2Parser::MethodInvocation_lfno_primary4Context *ctx){
    if(!MethodInvocation_lfno_primary4Context_cls) MethodInvocation_lfno_primary4Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodInvocation_lfno_primary4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodInvocation_lfno_primary4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitArgumentList(Java9_v2Parser::ArgumentListContext *ctx){
    if(!ArgumentListContext_cls) ArgumentListContext_cls = PyObject_GetAttrString(translator->parser_cls, "ArgumentListContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ArgumentListContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodReference1(Java9_v2Parser::MethodReference1Context *ctx){
    if(!MethodReference1Context_cls) MethodReference1Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodReference1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodReference1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodReference3(Java9_v2Parser::MethodReference3Context *ctx){
    if(!MethodReference3Context_cls) MethodReference3Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodReference3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodReference3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodReference2(Java9_v2Parser::MethodReference2Context *ctx){
    if(!MethodReference2Context_cls) MethodReference2Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodReference2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodReference2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodReference5(Java9_v2Parser::MethodReference5Context *ctx){
    if(!MethodReference5Context_cls) MethodReference5Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodReference5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodReference5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodReference4(Java9_v2Parser::MethodReference4Context *ctx){
    if(!MethodReference4Context_cls) MethodReference4Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodReference4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodReference4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodReference7(Java9_v2Parser::MethodReference7Context *ctx){
    if(!MethodReference7Context_cls) MethodReference7Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodReference7Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodReference7Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodReference6(Java9_v2Parser::MethodReference6Context *ctx){
    if(!MethodReference6Context_cls) MethodReference6Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodReference6Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodReference6Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodReference_lf_primary(Java9_v2Parser::MethodReference_lf_primaryContext *ctx){
    if(!MethodReference_lf_primaryContext_cls) MethodReference_lf_primaryContext_cls = PyObject_GetAttrString(translator->parser_cls, "MethodReference_lf_primaryContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodReference_lf_primaryContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodReference_lfno_primary6(Java9_v2Parser::MethodReference_lfno_primary6Context *ctx){
    if(!MethodReference_lfno_primary6Context_cls) MethodReference_lfno_primary6Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodReference_lfno_primary6Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodReference_lfno_primary6Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodReference_lfno_primary5(Java9_v2Parser::MethodReference_lfno_primary5Context *ctx){
    if(!MethodReference_lfno_primary5Context_cls) MethodReference_lfno_primary5Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodReference_lfno_primary5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodReference_lfno_primary5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodReference_lfno_primary4(Java9_v2Parser::MethodReference_lfno_primary4Context *ctx){
    if(!MethodReference_lfno_primary4Context_cls) MethodReference_lfno_primary4Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodReference_lfno_primary4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodReference_lfno_primary4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodReference_lfno_primary3(Java9_v2Parser::MethodReference_lfno_primary3Context *ctx){
    if(!MethodReference_lfno_primary3Context_cls) MethodReference_lfno_primary3Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodReference_lfno_primary3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodReference_lfno_primary3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodReference_lfno_primary2(Java9_v2Parser::MethodReference_lfno_primary2Context *ctx){
    if(!MethodReference_lfno_primary2Context_cls) MethodReference_lfno_primary2Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodReference_lfno_primary2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodReference_lfno_primary2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMethodReference_lfno_primary1(Java9_v2Parser::MethodReference_lfno_primary1Context *ctx){
    if(!MethodReference_lfno_primary1Context_cls) MethodReference_lfno_primary1Context_cls = PyObject_GetAttrString(translator->parser_cls, "MethodReference_lfno_primary1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MethodReference_lfno_primary1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitArrayCreationExpression4(Java9_v2Parser::ArrayCreationExpression4Context *ctx){
    if(!ArrayCreationExpression4Context_cls) ArrayCreationExpression4Context_cls = PyObject_GetAttrString(translator->parser_cls, "ArrayCreationExpression4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ArrayCreationExpression4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitArrayCreationExpression2(Java9_v2Parser::ArrayCreationExpression2Context *ctx){
    if(!ArrayCreationExpression2Context_cls) ArrayCreationExpression2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ArrayCreationExpression2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ArrayCreationExpression2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitArrayCreationExpression3(Java9_v2Parser::ArrayCreationExpression3Context *ctx){
    if(!ArrayCreationExpression3Context_cls) ArrayCreationExpression3Context_cls = PyObject_GetAttrString(translator->parser_cls, "ArrayCreationExpression3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ArrayCreationExpression3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitArrayCreationExpression1(Java9_v2Parser::ArrayCreationExpression1Context *ctx){
    if(!ArrayCreationExpression1Context_cls) ArrayCreationExpression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ArrayCreationExpression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ArrayCreationExpression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitDimExprs(Java9_v2Parser::DimExprsContext *ctx){
    if(!DimExprsContext_cls) DimExprsContext_cls = PyObject_GetAttrString(translator->parser_cls, "DimExprsContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, DimExprsContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitDimExpr(Java9_v2Parser::DimExprContext *ctx){
    if(!DimExprContext_cls) DimExprContext_cls = PyObject_GetAttrString(translator->parser_cls, "DimExprContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, DimExprContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitConstantExpression(Java9_v2Parser::ConstantExpressionContext *ctx){
    if(!ConstantExpressionContext_cls) ConstantExpressionContext_cls = PyObject_GetAttrString(translator->parser_cls, "ConstantExpressionContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ConstantExpressionContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitExpression2(Java9_v2Parser::Expression2Context *ctx){
    if(!Expression2Context_cls) Expression2Context_cls = PyObject_GetAttrString(translator->parser_cls, "Expression2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, Expression2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitExpression1(Java9_v2Parser::Expression1Context *ctx){
    if(!Expression1Context_cls) Expression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "Expression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, Expression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitLambdaExpression(Java9_v2Parser::LambdaExpressionContext *ctx){
    if(!LambdaExpressionContext_cls) LambdaExpressionContext_cls = PyObject_GetAttrString(translator->parser_cls, "LambdaExpressionContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, LambdaExpressionContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitLambdaParameters3(Java9_v2Parser::LambdaParameters3Context *ctx){
    if(!LambdaParameters3Context_cls) LambdaParameters3Context_cls = PyObject_GetAttrString(translator->parser_cls, "LambdaParameters3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, LambdaParameters3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitLambdaParameters1(Java9_v2Parser::LambdaParameters1Context *ctx){
    if(!LambdaParameters1Context_cls) LambdaParameters1Context_cls = PyObject_GetAttrString(translator->parser_cls, "LambdaParameters1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, LambdaParameters1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitLambdaParameters2(Java9_v2Parser::LambdaParameters2Context *ctx){
    if(!LambdaParameters2Context_cls) LambdaParameters2Context_cls = PyObject_GetAttrString(translator->parser_cls, "LambdaParameters2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, LambdaParameters2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInferredFormalParameterList(Java9_v2Parser::InferredFormalParameterListContext *ctx){
    if(!InferredFormalParameterListContext_cls) InferredFormalParameterListContext_cls = PyObject_GetAttrString(translator->parser_cls, "InferredFormalParameterListContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InferredFormalParameterListContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitLambdaBody1(Java9_v2Parser::LambdaBody1Context *ctx){
    if(!LambdaBody1Context_cls) LambdaBody1Context_cls = PyObject_GetAttrString(translator->parser_cls, "LambdaBody1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, LambdaBody1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitLambdaBody2(Java9_v2Parser::LambdaBody2Context *ctx){
    if(!LambdaBody2Context_cls) LambdaBody2Context_cls = PyObject_GetAttrString(translator->parser_cls, "LambdaBody2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, LambdaBody2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAssignmentExpression1(Java9_v2Parser::AssignmentExpression1Context *ctx){
    if(!AssignmentExpression1Context_cls) AssignmentExpression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "AssignmentExpression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AssignmentExpression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAssignmentExpression2(Java9_v2Parser::AssignmentExpression2Context *ctx){
    if(!AssignmentExpression2Context_cls) AssignmentExpression2Context_cls = PyObject_GetAttrString(translator->parser_cls, "AssignmentExpression2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AssignmentExpression2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAssignment(Java9_v2Parser::AssignmentContext *ctx){
    if(!AssignmentContext_cls) AssignmentContext_cls = PyObject_GetAttrString(translator->parser_cls, "AssignmentContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AssignmentContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitLeftHandSide5(Java9_v2Parser::LeftHandSide5Context *ctx){
    if(!LeftHandSide5Context_cls) LeftHandSide5Context_cls = PyObject_GetAttrString(translator->parser_cls, "LeftHandSide5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, LeftHandSide5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitLeftHandSide4(Java9_v2Parser::LeftHandSide4Context *ctx){
    if(!LeftHandSide4Context_cls) LeftHandSide4Context_cls = PyObject_GetAttrString(translator->parser_cls, "LeftHandSide4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, LeftHandSide4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitLeftHandSide3(Java9_v2Parser::LeftHandSide3Context *ctx){
    if(!LeftHandSide3Context_cls) LeftHandSide3Context_cls = PyObject_GetAttrString(translator->parser_cls, "LeftHandSide3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, LeftHandSide3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAssignmentOperator(Java9_v2Parser::AssignmentOperatorContext *ctx){
    if(!AssignmentOperatorContext_cls) AssignmentOperatorContext_cls = PyObject_GetAttrString(translator->parser_cls, "AssignmentOperatorContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AssignmentOperatorContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitConditionalExpression1(Java9_v2Parser::ConditionalExpression1Context *ctx){
    if(!ConditionalExpression1Context_cls) ConditionalExpression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ConditionalExpression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ConditionalExpression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitConditionalExpression2(Java9_v2Parser::ConditionalExpression2Context *ctx){
    if(!ConditionalExpression2Context_cls) ConditionalExpression2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ConditionalExpression2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ConditionalExpression2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitConditionalOrExpression1(Java9_v2Parser::ConditionalOrExpression1Context *ctx){
    if(!ConditionalOrExpression1Context_cls) ConditionalOrExpression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ConditionalOrExpression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ConditionalOrExpression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitConditionalOrExpression2(Java9_v2Parser::ConditionalOrExpression2Context *ctx){
    if(!ConditionalOrExpression2Context_cls) ConditionalOrExpression2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ConditionalOrExpression2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ConditionalOrExpression2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitConditionalAndExpression2(Java9_v2Parser::ConditionalAndExpression2Context *ctx){
    if(!ConditionalAndExpression2Context_cls) ConditionalAndExpression2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ConditionalAndExpression2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ConditionalAndExpression2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitConditionalAndExpression1(Java9_v2Parser::ConditionalAndExpression1Context *ctx){
    if(!ConditionalAndExpression1Context_cls) ConditionalAndExpression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ConditionalAndExpression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ConditionalAndExpression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInclusiveOrExpression2(Java9_v2Parser::InclusiveOrExpression2Context *ctx){
    if(!InclusiveOrExpression2Context_cls) InclusiveOrExpression2Context_cls = PyObject_GetAttrString(translator->parser_cls, "InclusiveOrExpression2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InclusiveOrExpression2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitInclusiveOrExpression1(Java9_v2Parser::InclusiveOrExpression1Context *ctx){
    if(!InclusiveOrExpression1Context_cls) InclusiveOrExpression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "InclusiveOrExpression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, InclusiveOrExpression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitExclusiveOrExpression1(Java9_v2Parser::ExclusiveOrExpression1Context *ctx){
    if(!ExclusiveOrExpression1Context_cls) ExclusiveOrExpression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ExclusiveOrExpression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ExclusiveOrExpression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitExclusiveOrExpression2(Java9_v2Parser::ExclusiveOrExpression2Context *ctx){
    if(!ExclusiveOrExpression2Context_cls) ExclusiveOrExpression2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ExclusiveOrExpression2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ExclusiveOrExpression2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAndExpression2(Java9_v2Parser::AndExpression2Context *ctx){
    if(!AndExpression2Context_cls) AndExpression2Context_cls = PyObject_GetAttrString(translator->parser_cls, "AndExpression2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AndExpression2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAndExpression1(Java9_v2Parser::AndExpression1Context *ctx){
    if(!AndExpression1Context_cls) AndExpression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "AndExpression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AndExpression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitEqualityExpression3(Java9_v2Parser::EqualityExpression3Context *ctx){
    if(!EqualityExpression3Context_cls) EqualityExpression3Context_cls = PyObject_GetAttrString(translator->parser_cls, "EqualityExpression3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, EqualityExpression3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitEqualityExpression2(Java9_v2Parser::EqualityExpression2Context *ctx){
    if(!EqualityExpression2Context_cls) EqualityExpression2Context_cls = PyObject_GetAttrString(translator->parser_cls, "EqualityExpression2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, EqualityExpression2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitEqualityExpression1(Java9_v2Parser::EqualityExpression1Context *ctx){
    if(!EqualityExpression1Context_cls) EqualityExpression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "EqualityExpression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, EqualityExpression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitRelationalExpression1(Java9_v2Parser::RelationalExpression1Context *ctx){
    if(!RelationalExpression1Context_cls) RelationalExpression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "RelationalExpression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, RelationalExpression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitRelationalExpression2(Java9_v2Parser::RelationalExpression2Context *ctx){
    if(!RelationalExpression2Context_cls) RelationalExpression2Context_cls = PyObject_GetAttrString(translator->parser_cls, "RelationalExpression2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, RelationalExpression2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitRelationalExpression5(Java9_v2Parser::RelationalExpression5Context *ctx){
    if(!RelationalExpression5Context_cls) RelationalExpression5Context_cls = PyObject_GetAttrString(translator->parser_cls, "RelationalExpression5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, RelationalExpression5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitRelationalExpression6(Java9_v2Parser::RelationalExpression6Context *ctx){
    if(!RelationalExpression6Context_cls) RelationalExpression6Context_cls = PyObject_GetAttrString(translator->parser_cls, "RelationalExpression6Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, RelationalExpression6Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitRelationalExpression3(Java9_v2Parser::RelationalExpression3Context *ctx){
    if(!RelationalExpression3Context_cls) RelationalExpression3Context_cls = PyObject_GetAttrString(translator->parser_cls, "RelationalExpression3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, RelationalExpression3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitRelationalExpression4(Java9_v2Parser::RelationalExpression4Context *ctx){
    if(!RelationalExpression4Context_cls) RelationalExpression4Context_cls = PyObject_GetAttrString(translator->parser_cls, "RelationalExpression4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, RelationalExpression4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitShiftExpression1(Java9_v2Parser::ShiftExpression1Context *ctx){
    if(!ShiftExpression1Context_cls) ShiftExpression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "ShiftExpression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ShiftExpression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitShiftExpression3(Java9_v2Parser::ShiftExpression3Context *ctx){
    if(!ShiftExpression3Context_cls) ShiftExpression3Context_cls = PyObject_GetAttrString(translator->parser_cls, "ShiftExpression3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ShiftExpression3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitShiftExpression2(Java9_v2Parser::ShiftExpression2Context *ctx){
    if(!ShiftExpression2Context_cls) ShiftExpression2Context_cls = PyObject_GetAttrString(translator->parser_cls, "ShiftExpression2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ShiftExpression2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitShiftExpression4(Java9_v2Parser::ShiftExpression4Context *ctx){
    if(!ShiftExpression4Context_cls) ShiftExpression4Context_cls = PyObject_GetAttrString(translator->parser_cls, "ShiftExpression4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, ShiftExpression4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAdditiveExpression1(Java9_v2Parser::AdditiveExpression1Context *ctx){
    if(!AdditiveExpression1Context_cls) AdditiveExpression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "AdditiveExpression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AdditiveExpression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAdditiveExpression3(Java9_v2Parser::AdditiveExpression3Context *ctx){
    if(!AdditiveExpression3Context_cls) AdditiveExpression3Context_cls = PyObject_GetAttrString(translator->parser_cls, "AdditiveExpression3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AdditiveExpression3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitAdditiveExpressio2(Java9_v2Parser::AdditiveExpressio2Context *ctx){
    if(!AdditiveExpressio2Context_cls) AdditiveExpressio2Context_cls = PyObject_GetAttrString(translator->parser_cls, "AdditiveExpressio2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, AdditiveExpressio2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMultiplicativeExpression1(Java9_v2Parser::MultiplicativeExpression1Context *ctx){
    if(!MultiplicativeExpression1Context_cls) MultiplicativeExpression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "MultiplicativeExpression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MultiplicativeExpression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMultiplicativeExpression4(Java9_v2Parser::MultiplicativeExpression4Context *ctx){
    if(!MultiplicativeExpression4Context_cls) MultiplicativeExpression4Context_cls = PyObject_GetAttrString(translator->parser_cls, "MultiplicativeExpression4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MultiplicativeExpression4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMultiplicativeExpression3(Java9_v2Parser::MultiplicativeExpression3Context *ctx){
    if(!MultiplicativeExpression3Context_cls) MultiplicativeExpression3Context_cls = PyObject_GetAttrString(translator->parser_cls, "MultiplicativeExpression3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MultiplicativeExpression3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitMultiplicativeExpression2(Java9_v2Parser::MultiplicativeExpression2Context *ctx){
    if(!MultiplicativeExpression2Context_cls) MultiplicativeExpression2Context_cls = PyObject_GetAttrString(translator->parser_cls, "MultiplicativeExpression2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, MultiplicativeExpression2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnaryExpression2(Java9_v2Parser::UnaryExpression2Context *ctx){
    if(!UnaryExpression2Context_cls) UnaryExpression2Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnaryExpression2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnaryExpression2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnaryExpression1(Java9_v2Parser::UnaryExpression1Context *ctx){
    if(!UnaryExpression1Context_cls) UnaryExpression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnaryExpression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnaryExpression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnaryExpression5(Java9_v2Parser::UnaryExpression5Context *ctx){
    if(!UnaryExpression5Context_cls) UnaryExpression5Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnaryExpression5Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnaryExpression5Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnaryExpression4(Java9_v2Parser::UnaryExpression4Context *ctx){
    if(!UnaryExpression4Context_cls) UnaryExpression4Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnaryExpression4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnaryExpression4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnaryExpression3(Java9_v2Parser::UnaryExpression3Context *ctx){
    if(!UnaryExpression3Context_cls) UnaryExpression3Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnaryExpression3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnaryExpression3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPreIncrementExpression(Java9_v2Parser::PreIncrementExpressionContext *ctx){
    if(!PreIncrementExpressionContext_cls) PreIncrementExpressionContext_cls = PyObject_GetAttrString(translator->parser_cls, "PreIncrementExpressionContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PreIncrementExpressionContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPreDecrementExpression(Java9_v2Parser::PreDecrementExpressionContext *ctx){
    if(!PreDecrementExpressionContext_cls) PreDecrementExpressionContext_cls = PyObject_GetAttrString(translator->parser_cls, "PreDecrementExpressionContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PreDecrementExpressionContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnaryExpressionNotPlusMinus4(Java9_v2Parser::UnaryExpressionNotPlusMinus4Context *ctx){
    if(!UnaryExpressionNotPlusMinus4Context_cls) UnaryExpressionNotPlusMinus4Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnaryExpressionNotPlusMinus4Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnaryExpressionNotPlusMinus4Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnaryExpressionNotPlusMinus3(Java9_v2Parser::UnaryExpressionNotPlusMinus3Context *ctx){
    if(!UnaryExpressionNotPlusMinus3Context_cls) UnaryExpressionNotPlusMinus3Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnaryExpressionNotPlusMinus3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnaryExpressionNotPlusMinus3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnaryExpressionNotPlusMinus2(Java9_v2Parser::UnaryExpressionNotPlusMinus2Context *ctx){
    if(!UnaryExpressionNotPlusMinus2Context_cls) UnaryExpressionNotPlusMinus2Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnaryExpressionNotPlusMinus2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnaryExpressionNotPlusMinus2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitUnaryExpressionNotPlusMinus1(Java9_v2Parser::UnaryExpressionNotPlusMinus1Context *ctx){
    if(!UnaryExpressionNotPlusMinus1Context_cls) UnaryExpressionNotPlusMinus1Context_cls = PyObject_GetAttrString(translator->parser_cls, "UnaryExpressionNotPlusMinus1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, UnaryExpressionNotPlusMinus1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPostfixExpression(Java9_v2Parser::PostfixExpressionContext *ctx){
    if(!PostfixExpressionContext_cls) PostfixExpressionContext_cls = PyObject_GetAttrString(translator->parser_cls, "PostfixExpressionContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PostfixExpressionContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPostIncrementExpression(Java9_v2Parser::PostIncrementExpressionContext *ctx){
    if(!PostIncrementExpressionContext_cls) PostIncrementExpressionContext_cls = PyObject_GetAttrString(translator->parser_cls, "PostIncrementExpressionContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PostIncrementExpressionContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPostIncrementExpression_lf_postfixExpression(Java9_v2Parser::PostIncrementExpression_lf_postfixExpressionContext *ctx){
    if(!PostIncrementExpression_lf_postfixExpressionContext_cls) PostIncrementExpression_lf_postfixExpressionContext_cls = PyObject_GetAttrString(translator->parser_cls, "PostIncrementExpression_lf_postfixExpressionContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PostIncrementExpression_lf_postfixExpressionContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPostDecrementExpression(Java9_v2Parser::PostDecrementExpressionContext *ctx){
    if(!PostDecrementExpressionContext_cls) PostDecrementExpressionContext_cls = PyObject_GetAttrString(translator->parser_cls, "PostDecrementExpressionContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PostDecrementExpressionContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitPostDecrementExpression_lf_postfixExpression(Java9_v2Parser::PostDecrementExpression_lf_postfixExpressionContext *ctx){
    if(!PostDecrementExpression_lf_postfixExpressionContext_cls) PostDecrementExpression_lf_postfixExpressionContext_cls = PyObject_GetAttrString(translator->parser_cls, "PostDecrementExpression_lf_postfixExpressionContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, PostDecrementExpression_lf_postfixExpressionContext_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitCastExpression3(Java9_v2Parser::CastExpression3Context *ctx){
    if(!CastExpression3Context_cls) CastExpression3Context_cls = PyObject_GetAttrString(translator->parser_cls, "CastExpression3Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, CastExpression3Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitCastExpression1(Java9_v2Parser::CastExpression1Context *ctx){
    if(!CastExpression1Context_cls) CastExpression1Context_cls = PyObject_GetAttrString(translator->parser_cls, "CastExpression1Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, CastExpression1Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitCastExpression2(Java9_v2Parser::CastExpression2Context *ctx){
    if(!CastExpression2Context_cls) CastExpression2Context_cls = PyObject_GetAttrString(translator->parser_cls, "CastExpression2Context");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, CastExpression2Context_cls);
    return py_ctx;
}

antlrcpp::Any SA_Java9_v2Translator::visitIdentifier(Java9_v2Parser::IdentifierContext *ctx){
    if(!IdentifierContext_cls) IdentifierContext_cls = PyObject_GetAttrString(translator->parser_cls, "IdentifierContext");
    PyObject *py_ctx = translator->convert_ctx(this, ctx, IdentifierContext_cls);
    return py_ctx;
}
